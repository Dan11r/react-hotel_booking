{"version":3,"file":"static/js/823.1ba2a554.chunk.js","mappings":"gRAoDMA,EAAc,CAClB,CACEC,KAAM,IACNC,WAAY,8CAEd,CACED,KAAM,SACNC,WAAY,+FAEd,CACED,KAAM,kBACNC,WA5C+D,SAAAC,GACjE,IAAMC,GAAOC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYH,EAAMI,MAAMC,OAAOC,SACxD,OAAO,2EAAcL,QAAd,IAAcA,OAAd,EAAcA,EAAMM,gBA4C3B,CACET,KAAM,WACNC,WAAY,8CAEd,CACED,KAAM,oBACNC,WAzD+D,SAAAC,GACjE,IAAMQ,GAAON,EAAAA,EAAAA,KAAYO,EAAAA,EAAAA,IAAYT,EAAMI,MAAMC,OAAOK,SACxD,OAAO,2CAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAMG,UAAhB,mBAA6BH,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMI,gBAyD1C,CACEd,KAAM,4BACNC,WAnDoE,SAAAC,GACtE,IAEIa,EACJ,OAHcb,EAAMI,MAAMC,OAAOS,OAI/B,IAAK,UACHD,EAAiB,8FACjB,MACF,IAAK,YACHA,EAAiB,4HACjB,MACF,IAAK,QACHA,EAAiB,qEACjB,MACF,IAAK,YACHA,EAAiB,yDACjB,MACF,IAAK,OACHA,EAAiB,4HACjB,MAEF,QACEA,EAAiB,GAGrB,OAAO,0BAAOA,OA8BVE,EAAa,SAACf,GAAD,OACjB,SAACgB,EAAA,GAAD,kBAAUhB,GAAV,IAAiBiB,UAAU,mBAAmBC,UAAU,QAAQC,UAAWC,EAAAA,OC9E7E,GDkHeC,EAAAA,EAAAA,GAAgBxB,EAA/B,EA7BoD,SAAC,GAAqB,IAAnByB,EAAkB,EAAlBA,YACrD,OACE,gBAAKL,UAAU,cAAf,UACE,SAAC,KAAD,UACG,WACC,OACE,SAAC,IAAD,CAAgB,aAAW,aAA3B,SACGK,EAAYC,KAAI,WAA0CC,GAAmB,IAA1DpB,EAAyD,EAAzDA,MAAOL,EAAkD,EAAlDA,WAEzB,OADayB,IAAUF,EAAYG,OAAS,GAE1C,iBAAMR,UAAU,yBAAhB,SACGlB,GAD2CK,EAAMsB,MAIpD,2BACE,SAACX,EAAD,CAA4BY,GAAIvB,EAAMsB,IAAtC,SACG3B,GADcK,EAAMsB,MADdtB,EAAMsB,mB,kCEnGnC,IAAeE,EAAf,G,mCCAA,IAAeC,EAAf,G,6ICGMC,EAAkB,CACtBC,MAAM,EACNC,WAAW,SAACC,EAAD,IACXC,WAAW,SAACC,EAAD,IACXC,UAAU,EACVC,aAAc,EACdC,eAAgB,GAGlB,SAASL,EAAT,GAAoD,IAA9BM,EAA6B,EAA7BA,QACpB,OACE,mBAAQtB,UAAU,gCAAgCsB,QAASA,EAA3D,UACE,SAACC,EAAA,EAAD,MAKN,SAASL,EAAT,GAAoD,IAA9BI,EAA6B,EAA7BA,QACpB,OACE,mBAAQtB,UAAU,kCAAkCsB,QAASA,EAA7D,UACE,SAACE,EAAA,EAAD,MAWN,IClCA,EDkCgD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAaC,GAAe,YAC7E,OACE,SAAC,KAAD,0BAAYb,GAAqBa,GAAjC,aACGD,O,0QErCP,ECWkD,SAAC,GAAwC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnEC,GAAa7C,EAAAA,EAAAA,KAAY8C,EAAAA,EAAAA,OAC/B,OACE,SAAC,IAAD,CACE,aAAW,OACXT,QAASO,EACT7B,UAAW4B,EAAS,kCAAoC,cACxDI,eAAa,EACbC,UAAWH,EALb,UAOE,iBAAK9B,UAAU,uBAAf,WACE,iBAAMA,UAAU,kBAAhB,gHACC4B,GAAS,SAACM,EAAA,EAAD,KAAmB,SAACC,EAAA,EAAD,IAC5BR,QCxBT,ECQgD,SAAC,GAAkB,IAAhBS,EAAe,EAAfA,SACjD,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOT,EAAP,KAAeU,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBxD,EAAAA,EAAAA,KAAYyD,EAAAA,EAAAA,OAC5BC,GAAQ1D,EAAAA,EAAAA,KAAY2D,EAAAA,EAAAA,IAAmBR,IAEvCS,EAAUF,EAAMG,MAAK,SAAAC,GAAI,OAAIA,EAAKtD,SAAWgD,MAEnDO,EAAAA,EAAAA,YAAU,WACJP,GACFH,EAAUO,KAEX,CAACF,EAAOF,IAYX,OAAO,SAAC,EAAD,CAAYd,aAAcgB,EAAMnC,OAAQoB,OAAQA,EAAQC,SAV5C,WACjB,IAAMoB,EAAW,CAAExD,OAAQgD,GAAiB,GAAIL,SAAAA,GAG9CG,EADEM,GACOK,EAAAA,EAAAA,IAAWD,IAEXE,EAAAA,EAAAA,GAAWF,QC5B1B,ECoBsC,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACjCb,GAAWC,EAAAA,EAAAA,MACjB,GAA8BH,EAAAA,EAAAA,UAAwB,MAAtD,eAAOgB,EAAP,KAAgBC,EAAhB,KACA,GAAgCjB,EAAAA,EAAAA,WAAS,GAAzC,eAAOkB,EAAP,KAAiBC,EAAjB,KACMC,GAAkBxE,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYkE,EAAO/D,SACjDE,GAAON,EAAAA,EAAAA,KAAYO,EAAAA,EAAAA,IAAY4D,EAAO3D,QAAU,KAChDiE,GAAczE,EAAAA,EAAAA,KAAY0E,EAAAA,EAAAA,OAS1BC,EAAgC,WAAX,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaG,MACvBC,EAAWV,EAAO3D,UAAP,OAAkBiE,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAaK,KAC1CC,EAAgBJ,GAAWE,GAoBjCd,EAAAA,EAAAA,YAAU,WACRM,EAAWF,EAAOC,WACjB,CAACD,IAMJ,OAAI7D,GAEA,eAAIS,UAAU,qBAAd,UACE,iBAAKA,UAAU,SAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,gBAAKA,UAAU,SAAf,UACE,SAACiE,EAAA,EAAD,CAAQC,IAAI,2EAAeC,IAAK5E,EAAK6E,aAAe,GAAIpE,UAAU,mBAEpE,SAAC,EAAD,CAAaoC,SAAUgB,EAAOW,KAAO,SAEvC,iBAAK/D,UAAU,kBAAf,WACE,iBAAKA,UAAU,oBAAf,oBACMT,EAAKG,UADX,YACwBH,EAAKI,YAC1BmE,IACC,gBAAK9D,UAAU,mBAAf,UACE,SAACqE,EAAA,EAAD,CAASC,MAAM,iFAAf,UACE,SAACC,EAAA,EAAD,CAAYjD,QAAS,kBAAMkC,GAAY,IAAvC,UACE,SAACgB,EAAA,EAAD,CAAUC,SAAS,gBAK1BT,IACC,gBAAKhE,UAAU,qBAAf,UACE,SAACqE,EAAA,EAAD,CAASC,MAAM,4EAAf,UACE,SAACC,EAAA,EAAD,CAAYjD,QA7CH,WACzBiB,GAASmC,EAAAA,EAAAA,IAAatB,EAAOW,KAAO,KACpC,IAAMY,EAAoB,CACxBZ,KAAoB,OAAfN,QAAe,IAAfA,OAAA,EAAAA,EAAiBM,MAAO,YAC7Ba,OAAsB,OAAfnB,QAAe,IAAfA,OAAA,EAAAA,EAAiBmB,QAAS,EACjCtF,YAA2B,OAAfmE,QAAe,IAAfA,OAAA,EAAAA,EAAiBnE,aAAc,YAC3CuF,aAAcC,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAiBoB,cAAgB,EACtDE,KAAMD,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAiBsB,MAAQ3B,EAAO4B,QAE/CzC,GAAS0C,EAAAA,EAAAA,IAAeN,KAoCR,UACE,SAACO,EAAA,EAAD,CAAWT,SAAS,iBAK5B,gBAAKzE,UAAU,iBAAf,UACE,SAACmF,EAAA,EAAD,CAAQC,MAAOhC,EAAO4B,OAAQK,UAAQ,UAG1C,cAAGrF,UAAU,eAAb,SAvEJoD,EAAOkC,aAAelC,EAAOmC,WACzB,6EAAN,QAAwBC,EAAAA,EAAAA,KAAiB,OAANpC,QAAM,IAANA,OAAA,EAAAA,EAAQmC,aAAc,MAEpDC,EAAAA,EAAAA,KAAiB,OAANpC,QAAM,IAANA,OAAA,EAAAA,EAAQkC,aAAc,MAqE/B/B,GACC,iCACE,SAAC,KAAD,CAAe6B,MAAO/B,EAASoC,SA1CxB,SAACC,GACpBpC,EAAWoC,EAAEC,OAAOP,QAyC+CQ,KAAM,KAC7D,SAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,QAAQC,MAAO,CAAEC,UAAW,OAAS3E,QAjExD,WACzBkC,GAAY,GACZ,IAAM0C,EAAU,CAAEnC,IAAKX,EAAOW,IAAKiB,OAAQ5B,EAAO4B,OAAQ3F,OAAQ+D,EAAO/D,OAAQgE,QAASD,EAAOC,SACjGd,GAAS4D,EAAAA,EAAAA,IAAaD,KA8DV,wEAKF,cAAGlG,UAAU,kBAAb,SAAgCqD,aAOrC,SAAC+C,EAAA,EAAD,KCpGT,EAVgD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjD,OACE,eAAIrG,UAAU,eAAd,SACGqG,EAAQ/F,KAAI,SAAA8C,GAAM,OACjB,SAAC,EAAD,CAAyBA,OAAQA,GAApBA,EAAOW,WCV5B,K,2MCAA,ECKoC,SAAC,GAAsC,IAApCtC,EAAmC,EAAnCA,SAAUzB,EAAyB,EAAzBA,UAAcsG,GAAW,YACxE,OACE,SAAC,KAAD,gBAAUtG,UAAWA,GAAesG,GAApC,aACG7E,M,8BCID8E,EAAgD,CACpDC,SAAS,SAACC,EAAA,EAAD,IACTC,gBAAgB,SAACC,EAAA,EAAD,IAChBC,cAAc,SAACC,EAAA,EAAD,KCfhB,EDkBqC,SAAC,GAAwD,IAAtD9C,EAAqD,EAArDA,IAAKzE,EAAgD,EAAhDA,WAAYsF,EAAoC,EAApCA,MAAOkC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACtEX,GAAUpH,EAAAA,EAAAA,KAAYgI,EAAAA,EAAAA,IAAmBlD,IACzCc,EAAewB,EAAUA,EAAQ7F,OAAS,EAC1CwE,EAASH,EAAe,EAAIwB,EAAQa,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIpC,SAAQ,GAAK,EAEtF,OACE,iBAAKhF,UAAU,YAAf,UACGgH,IACC,SAAC,EAAD,CAAOhH,UAAU,QAAjB,SACGgH,EAAS1G,KAAI,SAAA+G,GAAO,OACnB,yBAAoBd,EAAgBc,IAA1BA,SAIhB,SAACC,EAAA,EAAD,CAAatH,UAAU,qBAAvB,SACG+G,GACCA,EAAOzG,KAAI,SAAAiH,GAAG,OACZ,gBAAKvH,UAAU,0BAAf,UACE,gBAAKA,UAAU,+BAA+BmE,IAAKoD,EAAKrD,IAAI,gBADhBqD,SAKpD,UAAC,KAAD,CAAM7G,GAAE,iBAAYqD,GAAO/D,UAAU,yBAArC,WACE,iBAAKA,UAAU,6BAAf,WACE,gBAAIA,UAAU,mBAAd,qBACI,iBAAMA,UAAU,wBAAhB,SAAyCV,IACjC,6BAATwH,IAAmB,iBAAM9G,UAAU,kBAAhB,SAAmC8G,QAEzD,iBAAK9G,UAAU,wBAAf,WACE,4BAAO4E,EAAP,YADF,gDAIF,SAAC4C,EAAA,EAAD,KACA,iBAAKxH,UAAU,6BAAf,WACE,gBAAKA,UAAU,oBAAf,UACE,SAACmF,EAAA,EAAD,CAAQsC,KAAK,YAAYrC,MAAOJ,EAAQ0C,WAAY7C,EAAcQ,UAAQ,OAE5E,gBAAKrF,UAAU,qBAAf,UACE,iBAAMA,UAAU,2BAAhB,mBAA+C6E,EAA/C,aAA+D8C,EAAAA,EAAAA,GAAU9C,EAAc,CACrF,iCACA,uCACA,+D,gEErDR+C,EAAqC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5C,OACE,eAAI7H,UAAU,cAAd,SACG6H,EAAMvH,KAAI,SAAAtB,GAAI,OACb,eAAmBgB,UAAU,mBAA7B,UACE,SAAC,KAAD,UAAchB,KADPA,EAAK+E,WAQtB,IAAe+D,EAAAA,KAAWF,I,oOCC1B,EAVsD,SAAC,GAA0B,IAAxBhG,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC/D,OACE,SAACwC,EAAA,EAAD,CAASC,MAAO1C,EAAS,uHAA0B,iHAAnD,UACE,SAAC2C,EAAA,EAAD,CAAYvE,UAAU,yBAAyB+F,KAAK,QAAQzE,QAASO,EAArE,SACGD,GAAS,SAACmG,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,S,sECbjC,ECOgB,WACd,IAAQ3I,GAAW4I,EAAAA,EAAAA,MAAX5I,OACFgH,GAAUpH,EAAAA,EAAAA,KAAYgI,EAAAA,EAAAA,IAAmB5H,IAEzCoD,GAAgBxD,EAAAA,EAAAA,KAAYyD,EAAAA,EAAAA,OAE5BwF,EAAgB7B,EAAQ8B,MAAK,SAACC,EAAGC,GAAJ,OAAUC,OAAOD,EAAE/C,YAAYiD,cAAcD,OAAOF,EAAE9C,gBACnFkD,EAAoBN,EAAc1H,OAExC,OACE,gCACG6F,EAAQ7F,OAAS,IAChB,qBAASR,UAAU,UAAnB,WACE,iBAAKA,UAAU,gBAAf,WACE,eAAIA,UAAU,wBAAd,2JACA,oCAAUwI,EAAV,aAA+Bb,EAAAA,EAAAA,GAAUa,EAAmB,CAAC,iCAAS,uCAAU,qDAEjFA,EAAoB,IAAK,SAACC,EAAA,EAAD,CAAapC,QAAS6B,OAGnDzF,IACC,qBAASzC,UAAU,eAAnB,WACE,6GACA,SAAC,KAAD,WClBV,EAZuB,WACrB,OACE,iBAAKA,UAAU,kBAAf,WACE,eAAIA,UAAU,wBAAd,mDACA,kvB,wCCuCN,EAvCqB,WACnB,OACE,iBAAKA,UAAU,kBAAf,WACE,eAAIA,UAAU,wBAAd,2GACA,gBAAIA,UAAU,gBAAd,WACE,gBAAIA,UAAU,sBAAd,WACE,iBAAKA,UAAU,UAAf,WACE,SAAC0I,EAAA,EAAD,CAAU1I,UAAU,mBACpB,iBAAKA,UAAU,kBAAf,WACE,gBAAKA,UAAU,iBAAf,yDACA,gBAAKA,UAAU,oBAAf,8IAGJ,SAACwH,EAAA,EAAD,CAASxH,UAAU,0BAErB,gBAAIA,UAAU,sBAAd,WACE,iBAAKA,UAAU,UAAf,WACE,SAAC2I,EAAA,EAAD,CAAkB3I,UAAU,mBAC5B,iBAAKA,UAAU,kBAAf,WACE,gBAAKA,UAAU,iBAAf,+DACA,gBAAKA,UAAU,oBAAf,2IAGJ,SAACwH,EAAA,EAAD,CAASxH,UAAU,0BAErB,eAAIA,UAAU,sBAAd,UACE,iBAAKA,UAAU,UAAf,WACE,SAAC4I,EAAA,EAAD,CAAc5I,UAAU,mBACxB,iBAAKA,UAAU,kBAAf,WACE,gBAAKA,UAAU,iBAAf,iCACA,gBAAKA,UAAU,oBAAf,iJCzBd,EATwB,WACtB,OACE,iBAAKA,UAAU,kBAAf,WACE,eAAIA,UAAU,wBAAd,kIADF,4YCWJ,EAbsB,WACpB,OACE,iBAAKA,UAAU,kBAAf,WACE,eAAIA,UAAU,wBAAd,yDACA,gBAAIA,UAAU,cAAd,WACE,eAAIA,UAAU,oBAAd,iHACA,eAAIA,UAAU,oBAAd,kKACA,eAAIA,UAAU,oBAAd,0MCPR,ECiB0C,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OACrCL,GAAOC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYG,IAC/BwJ,IAAaC,EAAAA,GAAAA,oBACfA,EAAAA,GAAAA,mBAAwCC,SAAS1J,GAErD,GAA4BgD,EAAAA,EAAAA,UAASwG,IAAc,GAAnD,eAAOjH,EAAP,KAAeU,EAAf,KAOA,GAAItD,EAAM,CACR,IAAQM,EAAkDN,EAAlDM,WAAYyH,EAAsC/H,EAAtC+H,OAAsBD,GAAgB9H,EAA9B6F,aAA8B7F,EAAhB8H,MAAMlC,EAAU5F,EAAV4F,MAChD,OACE,6BACE,gBAAK5E,UAAU,6BAAf,UACE,SAACsH,EAAA,EAAD,CAAatH,UAAU,qBAAvB,SACG+G,GACCA,EAAOzG,KAAI,SAACiH,GAAD,OACT,gBAAevH,UAAU,+BAA+BmE,IAAKoD,EAAKrD,IAAI,cAA5DqD,WAIlB,iBAAKvH,UAAU,YAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,SAAC,EAAD,KACA,SAAC,EAAD,QAEF,SAAC,EAAD,KACA,iBAAKA,UAAU,mBAAf,WACE,SAAC,EAAD,KACA,SAAC,EAAD,WAGJ,gBAAKA,UAAU,kBAAf,UACE,UAACgJ,EAAA,EAAD,CAAOC,UAAW,EAAGjJ,UAAU,+BAA/B,WACE,gBAAKgG,MAAO,CAAEkD,QAAS,QAAvB,UACE,SAAC,EAAD,CAAgBtH,OAAQA,EAAQC,SAAU,kBAhC3B,SAACxC,GAC5ByJ,EAAAA,GAAAA,mBAAuCzJ,GACvCiD,GAAU,SAAA6G,GAAS,OAAKA,KA8BoCC,CAAqB/J,SAEvE,iBAAKW,UAAU,uBAAf,WACE,iBAAKA,UAAU,2BAAf,WACE,kBAAMA,UAAU,gCAAhB,oBAAmDV,KAClDwH,IAAQ,iBAAM9G,UAAU,gCAAhB,SAAiD8G,QAE5D,iBAAK9G,UAAU,qBAAf,WACE,4BAAO4E,EAAP,YADF,gDAKF,SAAC,KAAD,eAOZ,OAAO,SAACwB,EAAA,EAAD,K,oBC1EM,SAASiD,EAAUC,EAAaC,GAC7C,OAAoClH,EAAAA,EAAAA,UAAS,IAA7C,eAAOmH,EAAP,KAAmBC,EAAnB,KACA,GAAgCpH,EAAAA,EAAAA,UAASiH,GAAQ,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACA,GAAsCtH,EAAAA,EAAAA,WAAS,GAA/C,eAAOuH,EAAP,KAAoBC,EAApB,KAMMC,ECVO,SAAwB1E,EAAU2E,GAC/C,OAA4C1H,EAAAA,EAAAA,UAAY+C,GAAxD,eAAO4E,EAAP,KAAuBC,EAAvB,KASA,OARAjH,EAAAA,EAAAA,YAAU,WACR,IAAMkH,EAAQC,YAAW,WACvBF,EAAkB7E,KACjB2E,GAAS,KACZ,OAAO,WACLK,aAAaF,MAEd,CAAC9E,EAAO2E,IACJC,EDAqBK,CAAYb,EAAY,KAgBpD,OAdAxG,EAAAA,EAAAA,YAAU,WACR,GAAI8G,EAAqB,CACvBD,GAAe,GACf,IAAMS,EAAehB,EAAKiB,QAAO,SAAAC,GAAI,OACnCA,EAAKjB,EAAOkB,UAAUC,WAAWC,cAAc5B,SAASe,EAAoBa,kBAE9EhB,EAAQW,GACRT,GAAe,QAEfF,EAAQL,GACRO,GAAe,KAEhB,CAACC,EAAqBR,IAElB,CAAEI,aAAAA,EAAcE,YAAAA,EAAaJ,WAAAA,EAAYC,cAAAA,EAAemB,mBApBpC,SAAClF,GAC1B+D,EAAc/D,EAAEC,OAAOP,S,4FEP3B,ECO8C,SAAC,GAAyD,IAAvDyF,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,YAAatF,EAAwB,EAAxBA,SAAaa,GAAW,YAC/F0E,EAAaH,EAAMrK,OACnByK,EAAaC,KAAKC,KAAKH,EAAaF,GAC1C,OAAmB,IAAfG,GAAmC,IAAfD,EAAyB,MAG/C,gBAAKhL,UAAU,aAAf,UACE,SAAC,KAAD,QACEoL,MAAOH,EACPxF,SAAUA,EACV4F,KAAMN,EACNO,YAAa,EACbvF,KAAK,QACLD,QAAQ,YACJQ,O,UCrBZ,ECM4C,SAAC,GAAyB,IAAvBlB,EAAsB,EAAtBA,MAAOK,EAAe,EAAfA,SACpD,OACE,SAAC,KAAD,CACEgC,KAAK,YACL8D,MAAM,iCACNC,YAAY,sFACZpG,MAAOA,EACPK,SAAUA,EACVO,MAAO,CAAEyF,KAAM,QCdrB,ECS4D,SAAC,GAAkC,IAAhCL,EAA+B,EAA/BA,MAAOM,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC9E,OACE,SAAC,KAAD,CACE3F,MAAO,CAAE4F,SAAU,SACnBnE,KAAK,WACLoE,WAAW,EACXN,MAAM,4EACNnG,MAAOkD,OAAO8C,GACd3F,SAAU,SAAAC,GAAC,OAAIgG,EAAShG,IACxBiG,QAASA,K,mBCbTG,EAAoD,SAAC,GAAyB,IAAvBxH,EAAsB,EAAtBA,MAAO7C,EAAe,EAAfA,SAClE,OACE,gBAAKzB,UAAU,gBAAf,UACE,sBAAUA,UAAU,iBAApB,UACGsE,IAAS,mBAAQtE,UAAU,uBAAlB,SAA0CsE,IACnD7C,QCVT,EDgBeqG,EAAAA,KAAWgE,GEOpBC,EAAoD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAc1C,EAAqB,EAArBA,KAAM7H,EAAe,EAAfA,SACzEwK,EAAiBnE,EAAAA,SAAAA,IAAmBrG,GAAU,SAAAyK,GAClD,IAAM1B,EAAO0B,EACPC,SAAmB3B,EACrBjB,EAAS,GAab,OAXgB,WAAd4C,GACe,aAAdA,GAAgD,WAApB3B,EAAKzL,MAAM+H,MAAyC,WAApB0D,EAAKzL,MAAM+H,QAExEyC,GAAM,kBACDiB,EAAKzL,OADJ,IAEJuK,KAAAA,EACA7D,SAAUuG,EACV5G,MAAOkE,EAAKkB,EAAKzL,MAAM0I,UAIpB,SAAC,EAAD,CAAiBnD,MAAOkG,EAAKzL,MAAMuF,MAAnC,SAA2CwD,EAAAA,aAAmB0C,EAAMjB,QAG7E,OAAO,iBAAMvJ,UAAU,gBAAhB,SAAiCiM,KAG1C,GAAenE,EAAAA,KAAWiE,GCvCpBK,GAAe,CACnBC,YAAaC,KAAKC,MAClBC,cAAeF,KAAKC,MAJL,KAKfE,OAAQ,EACRhL,SAAU,EACViL,OAAQ,EACR9H,MAAO,CAAC,EAAG,MACX+H,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,iBAAiB,EACjBC,sBAAsB,EACtBvG,SAAS,EACTE,gBAAgB,EAChBE,cAAc,GAOVoG,GAA0C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjD,GAAwEC,EAAAA,EAAAA,MAAhEC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,mBAAoBC,EAA3C,EAA2CA,yBAErCC,GAAqBC,EAAAA,EAAAA,cACzB,SAAA7H,GACEA,EAAE8H,iBACFH,IACAJ,MAEF,CAACI,EAA0BJ,IAGvB3D,GAAI,kBAAQ8C,IAAiBe,GAEnC,OACE,qBAASnN,UAAU,mBAAnB,WACE,eAAIA,UAAU,kBAAd,oIACA,UAAC,GAAD,CAAiBsJ,KAAMA,EAAM0C,aAAcoB,EAA3C,WACE,SAAC,KAAD,CAAiB9D,KAAMA,EAAM7D,SAAU2H,EAAoB9I,MAAM,iIACjE,SAACmJ,EAAA,EAAD,CAAenE,KAAMA,EAAM7D,SAAU2H,KACrC,SAAC,KAAD,CACE7B,MAAM,4EACNmC,YAAY,8MACZjG,KAAK,QACLhC,SAAU2H,EACVO,IAAK,EACLC,IAAK,QAEP,UAAC,IAAD,CAActJ,MAAM,mDAApB,WACE,SAAC,KAAD,CAAUiH,MAAM,QAAQ9D,KAAK,aAC7B,SAAC,KAAD,CAAU8D,MAAM,qEAAc9D,KAAK,oBACnC,SAAC,KAAD,CAAU8D,MAAM,4EAAgB9D,KAAK,qBAEvC,UAAC,IAAD,CAAcnD,MAAM,0GAApB,WACE,SAAC,KAAD,CAAUiH,MAAM,0FAAoB9D,KAAK,aACzC,SAAC,KAAD,CAAU8D,MAAM,sEAAe9D,KAAK,cACpC,SAAC,KAAD,CAAU8D,MAAM,gMAA0C9D,KAAK,kBAEjE,UAAC,IAAD,CAAcnD,MAAM,qEAApB,WACE,SAAC,KAAD,CACEiH,MAAM,wFACN9D,KAAK,kBACLoG,aAAa,wMAEf,SAAC,KAAD,CACEtC,MAAM,6HACN9D,KAAK,uBACLoG,aAAa,iSAGjB,SAAChI,EAAA,EAAD,CAAQiB,KAAK,SAASxF,QAASgM,EAAoBQ,WAAS,EAA5D,gHC9ER,GDsFehG,EAAAA,KAAWkF,IEtF1B,G,QAAA,E,sBCaA,GAXyB,WACvB,OACE,iBAAKhN,UAAU,sBAAf,WACE,SAAC+N,GAAA,EAAD,CAAUjI,QAAQ,cAAckI,UAAU,OAAOC,OAAQ,OACzD,SAACF,GAAA,EAAD,CAAUjI,QAAQ,OAAOkI,UAAU,OAAOC,OAAQ,MAClD,SAAC,KAAD,KACA,SAACF,GAAA,EAAD,CAAUjI,QAAQ,OAAOkI,UAAU,OAAOC,OAAQ,SCMxD,GAb0B,SAAC,GAAwC,IAAtCnD,EAAqC,EAArCA,SACrBoD,EAAqBC,MAAMrD,GAAUsD,KAAK,IAChD,OACE,eAAIpO,UAAU,cAAd,SACGkO,EAAmB5N,KAAI,SAAC+N,EAAGC,GAAJ,OACtB,eAActO,UAAU,mBAAxB,UACE,SAAC,GAAD,KADOsO,SCLXC,GAAiB,CACrB,CAAE9G,KAAM,gEAAerC,MAAO,CAAEvG,KAAM,aAAc2P,MAAO,SAC3D,CAAE/G,KAAM,kFAAkBrC,MAAO,CAAEvG,KAAM,aAAc2P,MAAO,QAC9D,CAAE/G,KAAM,+DAAcrC,MAAO,CAAEvG,KAAM,eAAgB2P,MAAO,SAC5D,CAAE/G,KAAM,wFAAmBrC,MAAO,CAAEvG,KAAM,OAAQ2P,MAAO,SACzD,CAAE/G,KAAM,wFAAmBrC,MAAO,CAAEvG,KAAM,QAAS2P,MAAO,QAC1D,CAAE/G,KAAM,wFAAmBrC,MAAO,CAAEvG,KAAM,QAAS2P,MAAO,UCP5D,GDe4C,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACrD,OACE,SAAC,KAAD,CACEjH,KAAK,WACLzB,MAAO,CAAE4F,SAAU,SACnBL,MAAM,qEACNnG,MAAOuJ,KAAKC,UAAUH,GACtBhJ,SAAUiJ,EACV/C,QAAS4C,MEVTM,GAAqB,CACzB,CAAEpH,KAAM,IAAKrC,MAAO,GACpB,CAAEqC,KAAM,KAAMrC,MAAO,IACrB,CAAEqC,KAAM,KAAMrC,MAAO,IACrB,CAAEqC,KAAM,KAAMrC,MAAO,KAqFvB,GAlFkB,WAChB,IAAMyC,GAAQ5I,EAAAA,EAAAA,KAAY6P,EAAAA,EAAAA,OAC1B,GAA0CzM,EAAAA,EAAAA,UAASwF,GAAS,IAA5D,eAAOkH,EAAP,KAAsBC,EAAtB,KACMC,GAAiBhQ,EAAAA,EAAAA,KAAYiQ,EAAAA,EAAAA,OACnC,GAAoDhC,EAAAA,EAAAA,MAA5CC,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,yBACvB,EAAwEhE,EAAU0F,EAAe,CAC/FtE,SAAU,eADJf,EAAR,EAAQA,aAAcF,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,cAAemB,EAAjD,EAAiDA,mBAGjD,GAA2CuE,EAAAA,EAAAA,IAAQzF,GAAgB,GAAI,CAAE7K,KAAM,aAAc2P,MAAO,SAA5FY,EAAR,EAAQA,YAAaX,EAArB,EAAqBA,OAAQY,EAA7B,EAA6BA,UAC7B,GAMIC,EAAAA,EAAAA,IAAcF,GAAe,GAAIP,GAAmB,GAAGzJ,OAL1CmK,EADjB,EACEC,cACAzE,EAFF,EAEEA,YACAD,EAHF,EAGEA,SACA2E,EAJF,EAIEA,iBACAC,EALF,EAKEA,qBAGIC,GAAapC,EAAAA,EAAAA,cACjB,SAACqC,GACCP,EAAUV,KAAKkB,MAAMD,EAAMjK,OAAOP,QAClCqK,EAAiBG,EAAO,KAE1B,CAACH,EAAkBJ,IAGf/B,GAAqBC,EAAAA,EAAAA,cAAY,WACrCF,IACA5D,EAAc,IACd4F,EAAU,CAAExQ,KAAM,aAAc2P,MAAO,SACvCkB,EAAqB,CAAE/J,OAAQkJ,GAAmB,OACjD,CAACa,EAAsBrC,IAsB1B,OApBArK,EAAAA,EAAAA,YAAU,WACR,IAAI8M,GAAY,EAEVC,EAAuB,CAC3B1D,YAAaC,KAAKC,MAClBC,cAAeF,KAAKC,MAHL,MAajB,OAPIuD,IACFE,EAAAA,EAAAA,QAAA,kBAAyBD,GAAyB5C,IAAiB8C,MAAK,SAAAC,GACtElB,EAAiBkB,EAAI7M,aAEvB8M,EAAAA,EAAAA,IAAsBhD,IAGjB,WACL2C,GAAY,KAEb,CAAC3C,KAGF,kBAAMnN,UAAU,aAAhB,WACE,kBAAOA,UAAU,sBAAjB,UACE,SAAC,GAAD,CAAaiN,QAASK,OAExB,qBAAStN,UAAU,oBAAnB,WACE,iBAAKA,UAAU,sBAAf,WACE,SAAC,EAAD,CAAWoF,MAAOoE,EAAY/D,SAAUmF,KACxC,SAAC,GAAD,CAAW6D,OAAQA,EAAQC,OAAQiB,KACnC,SAAC,EAAD,CAAmBvE,MAAON,EAAUY,SAAUgE,EAAsB/D,QAASkD,SAE/E,eAAI7O,UAAU,eAAd,wMACCiP,GAAiB,SAAC,GAAD,CAAmBnE,SAAUA,KAAe,SAAC,GAAD,CAAWjD,MAAO0H,IACtD,IAAzBA,EAAc/O,SAAgB,yVAE9B4O,EAAY5O,OAASsK,IACpB,iBAAK9K,UAAU,yBAAf,WACE,SAAC,EAAD,CAAY6K,MAAOuE,EAAatE,SAAUA,EAAUC,YAAaA,EAAatF,SAAUgK,KACxF,cAAGzP,UAAU,8BAAb,oBACO+K,EAAc,GAAKD,GAAY,EADtC,8BAEIA,EAAWC,EAAclD,EAAMrH,OAASqH,EAAMrH,OAASsK,EAAWC,EAFtE,wCAGOlD,EAAMrH,OAHb,4GC1FZ,MCsBA,GAfwB,WACtB,IAAQnB,GAAW4I,EAAAA,EAAAA,MAAX5I,OAER,OACE,iCACE,SAACuB,EAAA,EAAD,KACA,UAACwP,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,IACChR,GAAS,SAAC,EAAD,CAAUA,OAAQA,KAAa,SAAC,GAAD,QAE3C,SAACsB,EAAA,EAAD","sources":["app/components/common/Breadcrumbs/Breadcrumbs.tsx","app/components/common/Breadcrumbs/index.ts","app/components/common/Footer/index.ts","app/components/common/Header/index.ts","app/components/common/ImageSlider/ImageSlider.tsx","app/components/common/ImageSlider/index.ts","app/components/common/ButtonLike/index.ts","app/components/common/ButtonLike/ButtonLike.tsx","app/components/ui/reviews/ReviewLikes/index.ts","app/components/ui/reviews/ReviewLikes/ReviewLikes.tsx","app/components/ui/reviews/Review/index.ts","app/components/ui/reviews/Review/Review.tsx","app/components/ui/reviews/ReviewsList/ReviewsList.tsx","app/components/ui/reviews/ReviewsList/index.ts","app/components/common/Badge/index.ts","app/components/common/Badge/Badge.tsx","app/components/ui/rooms/RoomCard/RoomCard.tsx","app/components/ui/rooms/RoomCard/index.ts","app/components/ui/rooms/RoomsList/RoomsList.tsx","app/components/common/ButtonFavorite/ButtonFavorite.tsx","app/components/ui/reviews/Reviews/index.ts","app/components/ui/reviews/Reviews/Reviews.tsx","app/components/ui/RoomPageCards/RoomCancelCard.tsx","app/components/ui/RoomPageCards/RoomInfoCard.tsx","app/components/ui/RoomPageCards/RoomReviewsCard.tsx","app/components/ui/RoomPageCards/RoomRulesCard.tsx","app/components/pages/RoomPage/index.ts","app/components/pages/RoomPage/RoomPage.tsx","app/hooks/useSearch.tsx","app/hooks/useDebounce.tsx","app/components/common/Pagination/index.ts","app/components/common/Pagination/Pagination.tsx","app/components/common/Searchbar/index.ts","app/components/common/Searchbar/Searchbar.tsx","app/components/ui/rooms/RoomsDisplayCount/index.ts","app/components/ui/rooms/RoomsDisplayCount/RoomsDisplayCount.tsx","app/components/ui/rooms/RoomsFilters/RoomsFiltersItem/RoomsFiltersItem.tsx","app/components/ui/rooms/RoomsFilters/RoomsFiltersItem/index.ts","app/components/ui/rooms/RoomsFilters/RoomsFiltersList/RoomsFiltersList.tsx","app/components/ui/rooms/RoomsFilters/RoomsFilters.tsx","app/components/ui/rooms/RoomsFilters/index.ts","app/components/ui/rooms/RoomsList/index.ts","app/components/ui/rooms/RoomCard/RoomCardSkeleton.tsx","app/components/ui/rooms/RoomsList/RoomsListSkeleton.tsx","app/components/ui/rooms/RoomsSort/RoomsSort.tsx","app/components/ui/rooms/RoomsSort/index.ts","app/components/pages/RoomsPage/RoomsPage.tsx","app/components/pages/RoomsPage/index.ts","app/layouts/rooms.tsx"],"sourcesContent":["import { Breadcrumbs as MuiBreadcrumbs, Link } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport withBreadcrumbs, { BreadcrumbsRoute } from 'react-router-breadcrumbs-hoc';\r\nimport { Link as RouterLink, LinkProps, Route, RouteComponentProps } from 'react-router-dom';\r\nimport { getRoomById } from '../../../store/rooms';\r\nimport { getUserById } from '../../../store/users';\r\n\r\ntype RouteParams = {\r\n  userId: string;\r\n  roomId: string;\r\n  route: string;\r\n};\r\n\r\nconst UserBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const user = useSelector(getUserById(props.match.params.userId));\r\n  return <span>{`${user?.firstName} ${user?.secondName}`}</span>;\r\n};\r\n\r\nconst RoomBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const room = useSelector(getRoomById(props.match.params.roomId));\r\n  return <span>Номер №{room?.roomNumber}</span>;\r\n};\r\n\r\nconst UserRouteBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const route = props.match.params.route;\r\n\r\n  let breadcrumbText;\r\n  switch (route) {\r\n    case 'booking':\r\n      breadcrumbText = 'Мои бронирования';\r\n      break;\r\n    case 'dashboard':\r\n      breadcrumbText = 'Панель администратора';\r\n      break;\r\n    case 'likes':\r\n      breadcrumbText = 'Понравилось';\r\n      break;\r\n    case 'favorites':\r\n      breadcrumbText = 'Избранное';\r\n      break;\r\n    case 'edit':\r\n      breadcrumbText = 'Редактировать профиль';\r\n      break;\r\n\r\n    default:\r\n      breadcrumbText = '';\r\n      break;\r\n  }\r\n  return <span>{breadcrumbText}</span>;\r\n};\r\n\r\nconst routeConfig = [\r\n  {\r\n    path: '/',\r\n    breadcrumb: 'Главная',\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    breadcrumb: 'Доступные номера',\r\n  },\r\n  {\r\n    path: '/rooms/:roomId?',\r\n    breadcrumb: RoomBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile',\r\n    breadcrumb: 'Профиль',\r\n  },\r\n  {\r\n    path: '/profile/:userId?',\r\n    breadcrumb: UserBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile/:userId?/:route?',\r\n    breadcrumb: UserRouteBreadcrumb,\r\n  },\r\n];\r\n\r\nconst LinkRouter = (props: LinkProps) => (\r\n  <Link {...props} className='breadcrumbs-item' underline='hover' component={RouterLink} />\r\n);\r\n\r\ntype BreadcrumbsPropsType = {\r\n  breadcrumbs: any;\r\n};\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsPropsType> = ({ breadcrumbs }) => {\r\n  return (\r\n    <div className='breadcrumbs'>\r\n      <Route>\r\n        {() => {\r\n          return (\r\n            <MuiBreadcrumbs aria-label='breadcrumb'>\r\n              {breadcrumbs.map(({ match, breadcrumb }: BreadcrumbsRoute, index: number) => {\r\n                const last = index === breadcrumbs.length - 1;\r\n                return last ? (\r\n                  <span className='breadcrumbs-item--last' key={match.url}>\r\n                    {breadcrumb}\r\n                  </span>\r\n                ) : (\r\n                  <span key={match.url}>\r\n                    <LinkRouter key={match.url} to={match.url}>\r\n                      {breadcrumb}\r\n                    </LinkRouter>\r\n                  </span>\r\n                );\r\n              })}\r\n            </MuiBreadcrumbs>\r\n          );\r\n        }}\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withBreadcrumbs(routeConfig)(Breadcrumbs);\r\n","import Breadcrumbs from './Breadcrumbs';\r\n\r\nexport default Breadcrumbs;\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Slider, { CustomArrowProps, Settings as SlickSettings } from 'react-slick';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\nconst defaultSettings = {\r\n  dots: true,\r\n  nextArrow: <NextButton />,\r\n  prevArrow: <PrevButton />,\r\n  infinite: true,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nfunction NextButton({ onClick }: CustomArrowProps) {\r\n  return (\r\n    <button className='slick-arrow slick-arrow--next' onClick={onClick}>\r\n      <ChevronRightIcon />\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction PrevButton({ onClick }: CustomArrowProps) {\r\n  return (\r\n    <button className='slick-arrow slick-arrow--before' onClick={onClick}>\r\n      <ChevronLeftIcon />\r\n    </button>\r\n  );\r\n}\r\n\r\ntype ImageSliderProps = {\r\n  children: React.ReactNode | React.ReactNode[];\r\n  settings?: SlickSettings;\r\n  [x: string]: any;\r\n};\r\n\r\nconst ImageSlider: React.FC<ImageSliderProps> = ({ children, ...settings }) => {\r\n  return (\r\n    <Slider {...defaultSettings} {...settings}>\r\n      {children}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","import ImageSlider from './ImageSlider';\r\n\r\nexport default ImageSlider;\r\n","import ButtonLike from './ButtonLike';\r\n\r\nexport default ButtonLike;\r\n","import { IconButton, IconButtonProps } from '@material-ui/core';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../../store/users';\r\n\r\ntype ButtonFavoriteProps = IconButtonProps & {\r\n  displayCount: number;\r\n  status: boolean;\r\n  onToggle: () => void;\r\n};\r\n\r\nconst ButtonLike: React.FC<ButtonFavoriteProps> = ({ displayCount, status, onToggle }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  return (\r\n    <IconButton\r\n      aria-label='like'\r\n      onClick={onToggle}\r\n      className={status ? 'like-button like-button--active' : 'like-button'}\r\n      disableRipple\r\n      disabled={!isLoggedIn}\r\n    >\r\n      <div className='like-button__wrapper'>\r\n        <span className='visually-hidden'>Количество лайков:</span>\r\n        {status ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n        {displayCount}\r\n      </div>\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ButtonLike;\r\n","import ReviewLikes from './ReviewLikes';\r\n\r\nexport default ReviewLikes;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createLike, getLikesByReviewId, removeLike } from '../../../../store/likes';\r\nimport { getCurrentUserId } from '../../../../store/users';\r\nimport ButtonLike from '../../../common/ButtonLike';\r\n\r\ntype ReviewLikesProps = {\r\n  reviewId: string;\r\n};\r\n\r\nconst ReviewLikes: React.FC<ReviewLikesProps> = ({ reviewId }) => {\r\n  const [status, setStatus] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const likes = useSelector(getLikesByReviewId(reviewId));\r\n\r\n  const isLiked = likes.some(like => like.userId === currentUserId);\r\n\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      setStatus(isLiked);\r\n    }\r\n  }, [likes, currentUserId]);\r\n\r\n  const toggleLike = () => {\r\n    const likeData = { userId: currentUserId || '', reviewId };\r\n\r\n    if (isLiked) {\r\n      dispatch(removeLike(likeData));\r\n    } else {\r\n      dispatch(createLike(likeData));\r\n    }\r\n  };\r\n\r\n  return <ButtonLike displayCount={likes.length} status={status} onToggle={toggleLike} />;\r\n};\r\n\r\nexport default ReviewLikes;\r\n","import Review from './Review';\r\n\r\nexport default Review;\r\n","import ClearIcon from '@mui/icons-material/Clear';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { IconButton } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeReview, updateReview } from '../../../../store/reviews';\r\nimport { getRoomById, updateRoomData } from '../../../../store/rooms';\r\nimport { getCurrentUserData, getUserById } from '../../../../store/users';\r\nimport { ReviewType } from '../../../../types/types';\r\nimport formatDate from '../../../../utils/formatDate';\r\nimport Avatar from '../../../common/Avatar';\r\nimport Button from '../../../common/Button';\r\nimport { TextAreaField } from '../../../common/Fields';\r\nimport Loader from '../../../common/Loader';\r\nimport Rating from '../../../common/Rating';\r\nimport Tooltip from '../../../common/Tooltip';\r\nimport ReviewLikes from '../ReviewLikes';\r\n\r\ntype ReviewProps = {\r\n  review: ReviewType;\r\n};\r\n\r\nconst Review: React.FC<ReviewProps> = ({ review }) => {\r\n  const dispatch = useDispatch();\r\n  const [content, setContent] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const currentRoomData = useSelector(getRoomById(review.roomId));\r\n  const user = useSelector(getUserById(review.userId || ''));\r\n  const currentUser = useSelector(getCurrentUserData());\r\n\r\n  const displayReviewData = () => {\r\n    if (review.created_at !== review.updated_at) {\r\n      return `Редактирован: ${formatDate(review?.updated_at || '')}`;\r\n    }\r\n    return formatDate(review?.created_at || '');\r\n  };\r\n\r\n  const isAdmin = currentUser?.role === 'admin';\r\n  const isAuthor = review.userId === currentUser?._id;\r\n  const showDeleteBtn = isAdmin || isAuthor;\r\n\r\n  const handleChangeReview = () => {\r\n    setEditMode(false);\r\n    const payload = { _id: review._id, rating: review.rating, roomId: review.roomId, content: review.content };\r\n    dispatch(updateReview(payload));\r\n  };\r\n\r\n  const handleRemoveReview = () => {\r\n    dispatch(removeReview(review._id || ''));\r\n    const updateRoomPayload = {\r\n      _id: currentRoomData?._id || 'not found',\r\n      price: currentRoomData?.price || 0,\r\n      roomNumber: currentRoomData?.roomNumber || 'not found',\r\n      countReviews: Number(currentRoomData?.countReviews) - 1,\r\n      rate: Number(currentRoomData?.rate) - review.rating,\r\n    };\r\n    dispatch(updateRoomData(updateRoomPayload));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContent(review.content);\r\n  }, [review]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <li className='reviews-list__item'>\r\n        <div className='review'>\r\n          <div className='review__avatar'>\r\n            <div className='avatar'>\r\n              <Avatar alt='пользователя' src={user.avatarPhoto || ''} className='avatar__img' />\r\n            </div>\r\n            <ReviewLikes reviewId={review._id || ''} />\r\n          </div>\r\n          <div className='review__content'>\r\n            <div className='review__user-name'>\r\n              {`${user.firstName} ${user.secondName}`}\r\n              {isAuthor && (\r\n                <div className='review__edit-btn'>\r\n                  <Tooltip title='Редактировать'>\r\n                    <IconButton onClick={() => setEditMode(true)}>\r\n                      <EditIcon fontSize='small' />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n              {showDeleteBtn && (\r\n                <div className='review__delete-btn'>\r\n                  <Tooltip title='Удалить отзыв'>\r\n                    <IconButton onClick={handleRemoveReview}>\r\n                      <ClearIcon fontSize='small' />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n              <div className='review__rating'>\r\n                <Rating value={review.rating} readOnly />\r\n              </div>\r\n            </div>\r\n            <p className='review__date'>{displayReviewData()}</p>\r\n            {editMode ? (\r\n              <>\r\n                <TextAreaField value={content} onChange={handleChange} rows={3} />\r\n                <Button variant='outlined' size='small' style={{ marginTop: '5px' }} onClick={handleChangeReview}>\r\n                  Применить\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <p className='review__message'>{content}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n  return <Loader />;\r\n};\r\n\r\nexport default Review;\r\n","import React from 'react';\r\nimport { ReviewType } from '../../../../types/types';\r\nimport Review from '../Review';\r\n\r\ntype ReviewsListProps = {\r\n  reviews: ReviewType[];\r\n};\r\n\r\nconst ReviewsList: React.FC<ReviewsListProps> = ({ reviews }) => {\r\n  return (\r\n    <ul className='reviews-list'>\r\n      {reviews.map(review => (\r\n        <Review key={review._id} review={review} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import ReviewsList from './ReviewsList';\r\n\r\nexport default ReviewsList;\r\n","import Badge from './Badge';\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport { Badge as MuiBadge, BadgeProps as MuiBadgeProps } from '@mui/material';\r\n\r\ntype BadgeProps = MuiBadgeProps & {\r\n  className: string;\r\n};\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ children, className, ...rest }) => {\r\n  return (\r\n    <MuiBadge className={className} {...rest}>\r\n      {children}\r\n    </MuiBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import AcUnitIcon from '@mui/icons-material/AcUnit';\r\nimport ComputerIcon from '@mui/icons-material/Computer';\r\nimport WifiIcon from '@mui/icons-material/Wifi';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getReviewsByRoomId } from '../../../../store/reviews';\r\nimport declOfNum from '../../../../utils/declOfNum';\r\nimport Badge from '../../../common/Badge';\r\nimport Divider from '../../../common/Divider';\r\nimport ImageSlider from '../../../common/ImageSlider';\r\nimport Rating from '../../../common/Rating';\r\nimport { RoomType } from '../../../../types/types';\r\n\r\nconst comfortIconsMap: { [x: string]: JSX.Element } = {\r\n  hasWifi: <WifiIcon />,\r\n  hasConditioner: <AcUnitIcon />,\r\n  hasWorkSpace: <ComputerIcon />,\r\n};\r\n\r\nconst RoomCard: React.FC<RoomType> = ({ _id, roomNumber, price, type, images, comforts }) => {\r\n  const reviews = useSelector(getReviewsByRoomId(_id));\r\n  const countReviews = reviews ? reviews.length : 0;\r\n  const rating = countReviews > 0 ? reviews.reduce((acc, cur) => acc + cur.rating, 0) : 0;\r\n\r\n  return (\r\n    <div className='room-card'>\r\n      {comforts && (\r\n        <Badge className='badge'>\r\n          {comforts.map(comfort => (\r\n            <div key={comfort}>{comfortIconsMap[comfort]}</div>\r\n          ))}\r\n        </Badge>\r\n      )}\r\n      <ImageSlider className='room-card__gallery'>\r\n        {images &&\r\n          images.map(img => (\r\n            <div className='room-card__gallery-item' key={img}>\r\n              <img className='room-card__gallery-item--img' src={img} alt='roomsPhoto' />\r\n            </div>\r\n          ))}\r\n      </ImageSlider>\r\n      <Link to={`/rooms/${_id}`} className='room-card__description'>\r\n        <div className='room-card__description-row'>\r\n          <h3 className='room-card__title'>\r\n            № <span className='room-card__title--big'>{roomNumber}</span>\r\n            {type === 'Люкс' && <span className='room-card__type'>{type}</span>}\r\n          </h3>\r\n          <div className='room-card__rentPerDay'>\r\n            <span>{price}&#8381;</span> в сутки\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className='room-card__description-row'>\r\n          <div className='room-card__rating'>\r\n            <Rating name='read-only' value={rating} totalCount={countReviews} readOnly />\r\n          </div>\r\n          <div className='room-card__reviews'>\r\n            <span className='room-card__reviews-count'>{`${countReviews} ${declOfNum(countReviews, [\r\n              'Отзыв',\r\n              'Отзыва',\r\n              'Отзывов',\r\n            ])}`}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCard;\r\n","import RoomCard from './RoomCard';\r\n\r\nexport default RoomCard;\r\n","import React from 'react';\r\nimport RoomCard from '../RoomCard';\r\nimport { RoomType } from '../../../../types/types';\r\n\r\ntype RoomListProps = {\r\n  rooms: RoomType[];\r\n};\r\n\r\nconst RoomsList: React.FC<RoomListProps> = ({ rooms }) => {\r\n  return (\r\n    <ul className='rooms__list'>\r\n      {rooms.map(room => (\r\n        <li key={room._id} className='rooms__list-item'>\r\n          <RoomCard {...room} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(RoomsList);\r\n","import { IconButton, IconButtonProps } from '@mui/material';\r\nimport React from 'react';\r\nimport Tooltip from '../Tooltip';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport StarOutlineIcon from '@mui/icons-material/StarOutline';\r\n\r\ntype ButtonFavoriteProps = IconButtonProps & {\r\n  status: boolean;\r\n  onToggle: () => void;\r\n};\r\n\r\nconst ButtonFavorite: React.FC<ButtonFavoriteProps> = ({ status, onToggle }) => {\r\n  return (\r\n    <Tooltip title={status ? 'Удалить из избранного' : 'Добавить в избранное'}>\r\n      <IconButton className='room-page__favoriteBtn' size='large' onClick={onToggle}>\r\n        {status ? <StarIcon /> : <StarOutlineIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ButtonFavorite;\r\n","import Reviews from './Reviews';\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { getReviewsByRoomId } from '../../../../store/reviews';\r\nimport { getCurrentUserId } from '../../../../store/users';\r\nimport declOfNum from '../../../../utils/declOfNum';\r\nimport { ReviewsForm } from '../../forms';\r\nimport ReviewsList from '../ReviewsList';\r\n\r\nconst Reviews = () => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const reviews = useSelector(getReviewsByRoomId(roomId));\r\n\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n\r\n  const sortedReviews = reviews.sort((a, b) => String(b.created_at).localeCompare(String(a.created_at)));\r\n  const totalReviewsCount = sortedReviews.length;\r\n\r\n  return (\r\n    <>\r\n      {reviews.length > 0 && (\r\n        <section className='reviews'>\r\n          <div className='reviews-title'>\r\n            <h2 className='room-info__card-title'>Отзывы посетителей номера</h2>\r\n            <span>{`${totalReviewsCount} ${declOfNum(totalReviewsCount, ['отзыв', 'отзыва', 'отзывов'])}`}</span>\r\n          </div>\r\n          {totalReviewsCount > 0 && <ReviewsList reviews={sortedReviews} />}\r\n        </section>\r\n      )}\r\n      {currentUserId && (\r\n        <section className='reviews-form'>\r\n          <h2>Оставить отзыв</h2>\r\n          <ReviewsForm />\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\n\r\nconst RoomCancelCard = () => {\r\n  return (\r\n    <div className='room-info__card'>\r\n      <h3 className='room-info__card-title'>Отмена</h3>\r\n      <p>\r\n        Бесплатная отмена в течение 48 ч. После этого при отмене не позднее чем за 5 дн. до прибытия вы получите полный\r\n        возврат за вычетом сбора за услуги.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCancelCard;\r\n","import React from 'react';\r\nimport LocationCityIcon from '@mui/icons-material/LocationCity';\r\nimport MoodIcon from '@mui/icons-material/Mood';\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport Divider from '../../common/Divider/Divider';\r\n\r\nconst RoomInfoCard = () => {\r\n  return (\r\n    <div className='room-info__card'>\r\n      <h3 className='room-info__card-title'>Сведения о номере</h3>\r\n      <ul className='features-list'>\r\n        <li className='features-list__item'>\r\n          <div className='feature'>\r\n            <MoodIcon className='feature__icon' />\r\n            <div className='feature-content'>\r\n              <div className='feature__title'>Комфорт</div>\r\n              <div className='feature__subtitle'>Шумопоглащающие стены</div>\r\n            </div>\r\n          </div>\r\n          <Divider className='feature-separator' />\r\n        </li>\r\n        <li className='features-list__item'>\r\n          <div className='feature'>\r\n            <LocationCityIcon className='feature__icon' />\r\n            <div className='feature-content'>\r\n              <div className='feature__title'>Удобство</div>\r\n              <div className='feature__subtitle'>Окно в каждой из спален</div>\r\n            </div>\r\n          </div>\r\n          <Divider className='feature-separator' />\r\n        </li>\r\n        <li className='features-list__item'>\r\n          <div className='feature'>\r\n            <WhatshotIcon className='feature__icon' />\r\n            <div className='feature-content'>\r\n              <div className='feature__title'>Уют</div>\r\n              <div className='feature__subtitle'>Номер оснащен камином</div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomInfoCard;\r\n","import React from 'react';\r\n\r\nconst RoomReviewsCard = () => {\r\n  return (\r\n    <div className='room-info__card'>\r\n      <h3 className='room-info__card-title'>Впечатления от номера</h3>\r\n      Скоро здесь будет статистика по отзывам! Приносим извинения за неудобства.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomReviewsCard;\r\n","import React from 'react';\r\n\r\nconst RoomRulesCard = () => {\r\n  return (\r\n    <div className='room-info__card'>\r\n      <h3 className='room-info__card-title'>Правила</h3>\r\n      <ul className='bullet-list'>\r\n        <li className='bullet-list__item'>Нельзя с питомцами</li>\r\n        <li className='bullet-list__item'>Без вечеринок и мероприятий</li>\r\n        <li className='bullet-list__item'>Время прибытия — после 13:00, а выезд до 12:00</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomRulesCard;\r\n","import RoomPage from './RoomPage';\r\n\r\nexport default RoomPage;\r\n","import { Paper } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport localStorageService from '../../../services/localStorage.service';\r\nimport { getRoomById } from '../../../store/rooms';\r\nimport ButtonFavorite from '../../common/ButtonFavorite/ButtonFavorite';\r\nimport ImageSlider from '../../common/ImageSlider';\r\nimport Loader from '../../common/Loader';\r\nimport { BookingForm } from '../../ui/forms';\r\nimport Reviews from '../../ui/reviews/Reviews';\r\nimport RoomCancelCard from '../../ui/RoomPageCards/RoomCancelCard';\r\nimport RoomInfoCard from '../../ui/RoomPageCards/RoomInfoCard';\r\nimport RoomReviewsCard from '../../ui/RoomPageCards/RoomReviewsCard';\r\nimport RoomRulesCard from '../../ui/RoomPageCards/RoomRulesCard';\r\n\r\ntype RoomPageProps = {\r\n  roomId: string;\r\n};\r\n\r\nconst RoomPage: React.FC<RoomPageProps> = ({ roomId }) => {\r\n  const room = useSelector(getRoomById(roomId));\r\n  const isFavorite = localStorageService.getFavoritesRoom()\r\n    ? localStorageService.getFavoritesRoom()!.includes(roomId)\r\n    : false;\r\n  const [status, setStatus] = useState(isFavorite || false);\r\n\r\n  const handleToggleFavorite = (roomId: string) => {\r\n    localStorageService.toggleFavoriteRoom(roomId);\r\n    setStatus(prevState => !prevState);\r\n  };\r\n\r\n  if (room) {\r\n    const { roomNumber, images, countReviews, type, price } = room;\r\n    return (\r\n      <main>\r\n        <div className='room-page__gallery-wrapper'>\r\n          <ImageSlider className='room-page__gallery'>\r\n            {images &&\r\n              images.map((img: string) => (\r\n                <img key={img} className='room-page__gallery-item--img' src={img} alt='roomsPhoto' />\r\n              ))}\r\n          </ImageSlider>\r\n        </div>\r\n        <div className='room-info'>\r\n          <div className='room-info__column'>\r\n            <div className='room-info__group'>\r\n              <RoomInfoCard />\r\n              <RoomReviewsCard />\r\n            </div>\r\n            <Reviews />\r\n            <div className='room-info__group'>\r\n              <RoomRulesCard />\r\n              <RoomCancelCard />\r\n            </div>\r\n          </div>\r\n          <div className='room-info__form'>\r\n            <Paper elevation={3} className='form-card booking-form__card'>\r\n              <div style={{ display: 'flex' }}>\r\n                <ButtonFavorite status={status} onToggle={() => handleToggleFavorite(roomId)} />\r\n              </div>\r\n              <div className='booking-form__header'>\r\n                <div className='booking-form__numberRoom'>\r\n                  <span className='booking-form__numberRoom-text'>№ {roomNumber}</span>\r\n                  {type && <span className='booking-form__numberRoom-type'>{type}</span>}\r\n                </div>\r\n                <div className='booking-form__cost'>\r\n                  <span>{price}&#8381;</span> в сутки\r\n                </div>\r\n              </div>\r\n\r\n              <BookingForm />\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n  return <Loader />;\r\n};\r\n\r\nexport default RoomPage;\r\n","import { useEffect, useState } from 'react';\r\nimport useDebounce from './useDebounce';\r\n\r\nexport default function useSearch(data: any[], config: { searchBy: string }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredData, setData] = useState(data || []);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      setIsSearching(true);\r\n      const dataFiltered = data.filter(item =>\r\n        item[config.searchBy].toString().toLowerCase().includes(debouncedSearchTerm.toLowerCase())\r\n      );\r\n      setData(dataFiltered);\r\n      setIsSearching(false);\r\n    } else {\r\n      setData(data);\r\n      setIsSearching(false);\r\n    }\r\n  }, [debouncedSearchTerm, data]);\r\n\r\n  return { filteredData, isSearching, searchTerm, setSearchTerm, handleChangeSearch };\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useDebounce<T>(value: T, delay?: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay || 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n}\r\n","import Pagination from './Pagination';\r\n\r\nexport default Pagination;\r\n","import { Pagination as MuiPagination, PaginationProps as MuiPaginationProps } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype PaginationProps = MuiPaginationProps & {\r\n  items: any[];\r\n  pageSize: number;\r\n  currentPage: number;\r\n};\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({ items, pageSize, currentPage, onChange, ...rest }) => {\r\n  const itemsCount = items.length;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1 || itemsCount === 0) return null;\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <MuiPagination\r\n        count={pagesCount}\r\n        onChange={onChange}\r\n        page={currentPage}\r\n        defaultPage={0}\r\n        size='large'\r\n        variant='outlined'\r\n        {...rest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Searchbar from './Searchbar';\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport { InputField } from '../Fields';\r\n\r\ntype SearchbarProps = {\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst Searchbar: React.FC<SearchbarProps> = ({ value, onChange }) => {\r\n  return (\r\n    <InputField\r\n      name='searchbar'\r\n      label='Поиск'\r\n      placeholder='Поиск по номеру...'\r\n      value={value}\r\n      onChange={onChange}\r\n      style={{ flex: '1' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import RoomsDisplayCount from './RoomsDisplayCount';\r\n\r\nexport default RoomsDisplayCount;\r\n","import { SelectProps as MuiSelectProps } from '@mui/material';\r\nimport React from 'react';\r\nimport { SelectField } from '../../../common/Fields';\r\nimport { OptionsItemType } from '../../../common/Fields/SelectField/SelectField';\r\n\r\ntype RoomsDisplayCountProps = MuiSelectProps & {\r\n  count: number;\r\n  setCount: (e: any) => void;\r\n  options: OptionsItemType[];\r\n};\r\n\r\nconst RoomsDisplayCount: React.FC<RoomsDisplayCountProps> = ({ count, setCount, options }) => {\r\n  return (\r\n    <SelectField\r\n      style={{ minWidth: '140px' }}\r\n      name='pageSize'\r\n      autoWidth={true}\r\n      label='Отображать по'\r\n      value={String(count)}\r\n      onChange={e => setCount(e)}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RoomsDisplayCount;\r\n","import React from 'react';\r\n\r\ntype RoomsFiltersItemProps = {\r\n  title?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst RoomsFiltersItem: React.FC<RoomsFiltersItemProps> = ({ title, children }) => {\r\n  return (\r\n    <div className='filters__item'>\r\n      <fieldset className='filters__group'>\r\n        {title && <legend className='filters__group-title'>{title}</legend>}\r\n        {children}\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(RoomsFiltersItem);\r\n","import RoomsFiltersItem from './RoomsFiltersItem';\r\n\r\nexport default RoomsFiltersItem;\r\n","import React, { PropsWithChildren, ReactElement } from 'react';\r\nimport RoomsFilterItem from '../RoomsFiltersItem';\r\n\r\ntype RoomsFiltersListProps = {\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  data: { [key: string]: any };\r\n  children: React.ReactNode;\r\n};\r\n\r\ntype FilterItemProps = {\r\n  name: string;\r\n  title?: string;\r\n  data?: {\r\n    [key: string]: any;\r\n  };\r\n  value?: string;\r\n  error?: string;\r\n  type?: string;\r\n  props?: {\r\n    [key: string]: any;\r\n  };\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onKeyDown?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst RoomsFiltersList: React.FC<RoomsFiltersListProps> = ({ handleChange, data, children }) => {\r\n  const clonedElements = React.Children.map(children, child => {\r\n    const item = child as ReactElement<PropsWithChildren<FilterItemProps>>;\r\n    const childType = typeof item;\r\n    let config = {};\r\n    if (\r\n      childType === 'object' ||\r\n      (childType === 'function' && item.props.type !== 'submit' && item.props.type !== 'button')\r\n    ) {\r\n      config = {\r\n        ...item.props,\r\n        data,\r\n        onChange: handleChange,\r\n        value: data[item.props.name],\r\n      };\r\n    }\r\n\r\n    return <RoomsFilterItem title={item.props.title}>{React.cloneElement(item, config)}</RoomsFilterItem>;\r\n  });\r\n\r\n  return <form className='filters__form'>{clonedElements}</form>;\r\n};\r\n\r\nexport default React.memo(RoomsFiltersList);\r\n","import React, { useCallback } from 'react';\r\nimport { useFiltersQuery } from '../../../../hooks';\r\nimport Button from '../../../common/Button';\r\nimport { Checkbox, CheckBoxList, DateOfStayField, RangeSliderField } from '../../../common/Fields';\r\nimport GuestsCounter from '../../GuestsCounter/GuestsCounter';\r\nimport RoomsFilterList from './RoomsFiltersList/RoomsFiltersList';\r\n\r\nconst oneDayMs = 86000000;\r\n\r\nconst initialState = {\r\n  arrivalDate: Date.now(),\r\n  departureDate: Date.now() + oneDayMs,\r\n  adults: 1,\r\n  children: 0,\r\n  babies: 0,\r\n  price: [0, 15000],\r\n  canSmoke: false,\r\n  canPets: false,\r\n  canInvite: false,\r\n  hasWideCorridor: false,\r\n  hasDisabledAssistant: false,\r\n  hasWifi: false,\r\n  hasConditioner: false,\r\n  hasWorkSpace: false,\r\n};\r\n\r\ntype RoomsFilterProps = {\r\n  onReset: () => void;\r\n};\r\n\r\nconst RoomsFilter: React.FC<RoomsFilterProps> = ({ onReset }) => {\r\n  const { searchFilters, handleChangeFilter, handleResetSearchFilters } = useFiltersQuery();\r\n\r\n  const handleResetFilters = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      handleResetSearchFilters();\r\n      onReset();\r\n    },\r\n    [handleResetSearchFilters, onReset]\r\n  );\r\n\r\n  const data = { ...initialState, ...searchFilters };\r\n\r\n  return (\r\n    <section className='filters__wrapper'>\r\n      <h2 className='visually-hidden'>Поиск номеров в отеле toxin</h2>\r\n      <RoomsFilterList data={data} handleChange={handleChangeFilter}>\r\n        <DateOfStayField data={data} onChange={handleChangeFilter} title='Дата пребывания в отеле' />\r\n        <GuestsCounter data={data} onChange={handleChangeFilter} />\r\n        <RangeSliderField\r\n          label='Диапазон цены'\r\n          description='Стоимость за сутки пребывания в номере'\r\n          name='price'\r\n          onChange={handleChangeFilter}\r\n          min={0}\r\n          max={15000}\r\n        />\r\n        <CheckBoxList title='Удобства'>\r\n          <Checkbox label='Wi-Fi' name='hasWifi' />\r\n          <Checkbox label='Кондиционер' name='hasConditioner' />\r\n          <Checkbox label='Рабочее место' name='hasWorkSpace' />\r\n        </CheckBoxList>\r\n        <CheckBoxList title='Условия размещения'>\r\n          <Checkbox label='Можно c питомцами' name='canPets' />\r\n          <Checkbox label='Можно курить' name='canSmoke' />\r\n          <Checkbox label='Можно пригласить гостей (до 10 человек)' name='canInvite' />\r\n        </CheckBoxList>\r\n        <CheckBoxList title='Доступность'>\r\n          <Checkbox\r\n            label='Широкий коридор'\r\n            name='hasWideCorridor'\r\n            labelDetails='Ширина коридоров в номере не менее 91см'\r\n          />\r\n          <Checkbox\r\n            label='Помощник для инвалидов'\r\n            name='hasDisabledAssistant'\r\n            labelDetails='На 1 этаже вас встретит специалист и проводит до номера'\r\n          />\r\n        </CheckBoxList>\r\n        <Button type='button' onClick={handleResetFilters} fullWidth>\r\n          Сбросить Фильтры\r\n        </Button>\r\n      </RoomsFilterList>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(RoomsFilter);\r\n","import RoomsFilters from './RoomsFilters';\r\n\r\nexport default RoomsFilters;\r\n","import RoomsList from './RoomsList';\r\n\r\nexport default RoomsList;\r\n","import React from 'react';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Divider from '../../../common/Divider';\r\n\r\nconst RoomCardSkeleton = () => {\r\n  return (\r\n    <div className='room-card__skeleton'>\r\n      <Skeleton variant='rectangular' animation='wave' height={150} />\r\n      <Skeleton variant='text' animation='wave' height={50} />\r\n      <Divider />\r\n      <Skeleton variant='text' animation='wave' height={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCardSkeleton;\r\n","import React from 'react';\r\nimport RoomCardSkeleton from '../RoomCard/RoomCardSkeleton';\r\n\r\nconst RoomsListSkeleton = ({ pageSize }: { pageSize: number }) => {\r\n  const roomsSkeletonArray = Array(pageSize).fill('');\r\n  return (\r\n    <ul className='rooms__list'>\r\n      {roomsSkeletonArray.map((_, idx) => (\r\n        <li key={idx} className='rooms__list-item'>\r\n          <RoomCardSkeleton />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RoomsListSkeleton;\r\n","import React from 'react';\r\nimport { SelectField } from '../../../common/Fields';\r\n\r\nconst roomsSortArray = [\r\n  { name: 'По убыванию', value: { path: 'roomNumber', order: 'desc' } },\r\n  { name: 'По возрастанию', value: { path: 'roomNumber', order: 'asc' } },\r\n  { name: 'Популярное', value: { path: 'countReviews', order: 'desc' } },\r\n  { name: 'Высокий рейтинг', value: { path: 'rate', order: 'desc' } },\r\n  { name: 'Сначала дешёвые', value: { path: 'price', order: 'asc' } },\r\n  { name: 'Сначала дорогие', value: { path: 'price', order: 'desc' } },\r\n];\r\n\r\ntype RoomsSortProps = {\r\n  sortBy: { path: string; order: 'asc' | 'desc' };\r\n  onSort: (event: any) => void;\r\n};\r\n\r\nconst RoomsSort: React.FC<RoomsSortProps> = ({ sortBy, onSort }) => {\r\n  return (\r\n    <SelectField\r\n      name='roomSort'\r\n      style={{ minWidth: '200px' }}\r\n      label='Сортировать'\r\n      value={JSON.stringify(sortBy)}\r\n      onChange={onSort}\r\n      options={roomsSortArray}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RoomsSort;\r\n","import RoomsSort from './RoomsSort';\r\n\r\nexport default RoomsSort;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFiltersQuery, usePagination, useSort } from '../../../hooks';\r\nimport useSearch from '../../../hooks/useSearch';\r\nimport roomsService from '../../../services/rooms.service';\r\nimport { setSessionStorageData } from '../../../services/sessionStorage.service';\r\nimport { getRooms, getRoomsLoadingStatus } from '../../../store/rooms';\r\nimport Pagination from '../../common/Pagination';\r\nimport Searchbar from '../../common/Searchbar';\r\nimport RoomsDisplayCount from '../../ui/rooms/RoomsDisplayCount';\r\nimport RoomsFilter from '../../ui/rooms/RoomsFilters';\r\nimport RoomsList from '../../ui/rooms/RoomsList';\r\nimport RoomsListSkeleton from '../../ui/rooms/RoomsList/RoomsListSkeleton';\r\nimport RoomsSort from '../../ui/rooms/RoomsSort';\r\n\r\nconst setPageSizeOptions = [\r\n  { name: '6', value: 6 },\r\n  { name: '12', value: 12 },\r\n  { name: '18', value: 18 },\r\n  { name: '24', value: 24 },\r\n];\r\n\r\nconst RoomsPage = () => {\r\n  const rooms = useSelector(getRooms());\r\n  const [filteredRooms, setFilteredRooms] = useState(rooms || []);\r\n  const roomsIsLoading = useSelector(getRoomsLoadingStatus());\r\n  const { searchFilters, handleResetSearchFilters } = useFiltersQuery();\r\n  const { filteredData, searchTerm, setSearchTerm, handleChangeSearch } = useSearch(filteredRooms, {\r\n    searchBy: 'roomNumber',\r\n  });\r\n  const { sortedItems, sortBy, setSortBy } = useSort(filteredData || [], { path: 'roomNumber', order: 'desc' });\r\n  const {\r\n    itemsListCrop: roomsListCrop,\r\n    currentPage,\r\n    pageSize,\r\n    handleChangePage,\r\n    handleChangePageSize,\r\n  } = usePagination(sortedItems || [], setPageSizeOptions[1].value);\r\n\r\n  const handleSort = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSortBy(JSON.parse(event.target.value));\r\n      handleChangePage(event, 1);\r\n    },\r\n    [handleChangePage, setSortBy]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    handleResetSearchFilters();\r\n    setSearchTerm('');\r\n    setSortBy({ path: 'roomNumber', order: 'desc' });\r\n    handleChangePageSize({ target: setPageSizeOptions[1] });\r\n  }, [handleChangePageSize, handleResetSearchFilters]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const oneDayMs = 86_000_000;\r\n    const initialSearchFilters = {\r\n      arrivalDate: Date.now(),\r\n      departureDate: Date.now() + oneDayMs,\r\n    };\r\n\r\n    if (isMounted) {\r\n      roomsService.getAll({ ...initialSearchFilters, ...searchFilters }).then(res => {\r\n        setFilteredRooms(res.content);\r\n      });\r\n      setSessionStorageData(searchFilters);\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [searchFilters]);\r\n\r\n  return (\r\n    <main className='rooms-page'>\r\n      <aside className='rooms-page__filters'>\r\n        <RoomsFilter onReset={handleResetFilters} />\r\n      </aside>\r\n      <section className='rooms-page__rooms'>\r\n        <div className='rooms-page__sorting'>\r\n          <Searchbar value={searchTerm} onChange={handleChangeSearch} />\r\n          <RoomsSort sortBy={sortBy} onSort={handleSort} />\r\n          <RoomsDisplayCount count={pageSize} setCount={handleChangePageSize} options={setPageSizeOptions} />\r\n        </div>\r\n        <h2 className='rooms__title'>Номера, которые мы для вас подобрали</h2>\r\n        {roomsIsLoading ? <RoomsListSkeleton pageSize={pageSize} /> : <RoomsList rooms={roomsListCrop} />}\r\n        {roomsListCrop.length === 0 && <h2>Мы не нашли для вас подходящих номеров по вашим параметрам &#128577;</h2>}\r\n\r\n        {sortedItems.length > pageSize && (\r\n          <div className='rooms-page__pagination'>\r\n            <Pagination items={sortedItems} pageSize={pageSize} currentPage={currentPage} onChange={handleChangePage} />\r\n            <p className='rooms-page__pagination-info'>\r\n              {`${(currentPage - 1) * pageSize || 1} - \r\n              ${pageSize * currentPage > rooms.length ? rooms.length : pageSize * currentPage}\r\n              из ${rooms.length} вариантов аренды`}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default RoomsPage;\r\n","import RoomsPage from './RoomsPage';\r\n\r\nexport default RoomsPage;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Breadcrumbs from '../components/common/Breadcrumbs';\r\nimport Container from '../components/common/Container';\r\nimport Footer from '../components/common/Footer';\r\nimport Header from '../components/common/Header';\r\nimport RoomPage from '../components/pages/RoomPage';\r\nimport RoomsPage from '../components/pages/RoomsPage';\r\n\r\nconst Rooms: React.FC = () => {\r\n  const { roomId } = useParams<{ roomId?: string }>();\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Breadcrumbs />\r\n        {roomId ? <RoomPage roomId={roomId} /> : <RoomsPage />}\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n"],"names":["routeConfig","path","breadcrumb","props","room","useSelector","getRoomById","match","params","roomId","roomNumber","user","getUserById","userId","firstName","secondName","breadcrumbText","route","LinkRouter","Link","className","underline","component","RouterLink","withBreadcrumbs","breadcrumbs","map","index","length","url","to","Footer","Header","defaultSettings","dots","nextArrow","NextButton","prevArrow","PrevButton","infinite","slidesToShow","slidesToScroll","onClick","ChevronRight","ChevronLeft","children","settings","displayCount","status","onToggle","isLoggedIn","getIsLoggedIn","disableRipple","disabled","Favorite","FavoriteBorder","reviewId","useState","setStatus","dispatch","useDispatch","currentUserId","getCurrentUserId","likes","getLikesByReviewId","isLiked","some","like","useEffect","likeData","removeLike","createLike","review","content","setContent","editMode","setEditMode","currentRoomData","currentUser","getCurrentUserData","isAdmin","role","isAuthor","_id","showDeleteBtn","Avatar","alt","src","avatarPhoto","Tooltip","title","IconButton","Edit","fontSize","removeReview","updateRoomPayload","price","countReviews","Number","rate","rating","updateRoomData","Clear","Rating","value","readOnly","created_at","updated_at","formatDate","onChange","e","target","rows","Button","variant","size","style","marginTop","payload","updateReview","Loader","reviews","rest","comfortIconsMap","hasWifi","Wifi","hasConditioner","AcUnit","hasWorkSpace","Computer","type","images","comforts","getReviewsByRoomId","reduce","acc","cur","comfort","ImageSlider","img","Divider","name","totalCount","declOfNum","RoomsList","rooms","React","Star","StarOutline","useParams","sortedReviews","sort","a","b","String","localeCompare","totalReviewsCount","ReviewsList","Mood","LocationCity","Whatshot","isFavorite","localStorageService","includes","Paper","elevation","display","prevState","handleToggleFavorite","useSearch","data","config","searchTerm","setSearchTerm","filteredData","setData","isSearching","setIsSearching","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","dataFiltered","filter","item","searchBy","toString","toLowerCase","handleChangeSearch","items","pageSize","currentPage","itemsCount","pagesCount","Math","ceil","count","page","defaultPage","label","placeholder","flex","setCount","options","minWidth","autoWidth","RoomsFiltersItem","RoomsFiltersList","handleChange","clonedElements","child","childType","initialState","arrivalDate","Date","now","departureDate","adults","babies","canSmoke","canPets","canInvite","hasWideCorridor","hasDisabledAssistant","RoomsFilter","onReset","useFiltersQuery","searchFilters","handleChangeFilter","handleResetSearchFilters","handleResetFilters","useCallback","preventDefault","GuestsCounter","description","min","max","labelDetails","fullWidth","Skeleton","animation","height","roomsSkeletonArray","Array","fill","_","idx","roomsSortArray","order","sortBy","onSort","JSON","stringify","setPageSizeOptions","getRooms","filteredRooms","setFilteredRooms","roomsIsLoading","getRoomsLoadingStatus","useSort","sortedItems","setSortBy","usePagination","roomsListCrop","itemsListCrop","handleChangePage","handleChangePageSize","handleSort","event","parse","isMounted","initialSearchFilters","roomsService","then","res","setSessionStorageData","Container","Breadcrumbs"],"sourceRoot":""}