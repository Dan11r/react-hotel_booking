{"version":3,"file":"static/js/455.2bb73989.chunk.js","mappings":"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","sources":["app/components/common/Breadcrumbs/Breadcrumbs.tsx","app/components/common/Breadcrumbs/index.ts","app/components/common/ImageSlider/ImageSlider.tsx","app/components/common/ImageSlider/index.ts","app/components/common/ButtonLike/index.ts","app/components/common/ButtonLike/ButtonLike.tsx","app/components/ui/reviews/ReviewLikes/index.ts","app/components/ui/reviews/ReviewLikes/ReviewLikes.tsx","app/components/ui/reviews/Review/index.ts","app/components/ui/reviews/Review/Review.tsx","app/components/ui/reviews/ReviewsList/ReviewsList.tsx","app/components/ui/reviews/ReviewsList/index.ts","app/components/common/Badge/index.ts","app/components/common/Badge/Badge.tsx","app/components/ui/rooms/RoomCard/RoomCard.tsx","app/components/ui/rooms/RoomCard/index.ts","app/components/ui/rooms/RoomsList/RoomsList.tsx","app/components/common/Sidebar/index.ts","app/components/common/Sidebar/Sidebar.tsx","app/components/common/Table/TableHeader/TableHeader.tsx","app/components/common/Table/TableHeader/index.ts","app/components/common/Table/TableBody/index.ts","app/components/common/Table/TableBody/TableBody.tsx","app/components/common/Table/Table/index.ts","app/components/common/Table/Table/Table.tsx","app/components/common/Chip/Chip.tsx","app/components/ui/modals/RoomEditModal/RoomEditModal.tsx","app/components/ui/modals/RoomEditModal/index.ts","app/components/ui/profile/AdminDashboard/BookingTable/BookingTableRow.tsx","app/components/ui/profile/AdminDashboard/BookingTable/BookingTable.tsx","app/components/ui/profile/AdminDashboard/RoomsListTable/RoomsListTableRow.tsx","app/components/ui/profile/AdminDashboard/RoomsListTable/RoomsListTable.tsx","app/components/ui/profile/AdminDashboard/index.ts","app/components/ui/profile/AdminDashboard/AdminDashboard.tsx","app/components/ui/booking/BookingCard/BookingCard.tsx","app/components/ui/profile/ProfileBooking/index.ts","app/components/ui/profile/ProfileBooking/ProfileBooking.tsx","app/components/ui/forms/ProfileEditForm/validatorConfig.ts","app/components/ui/forms/ProfileEditForm/ProfileEditForm.tsx","app/components/ui/profile/ProfileEdit/index.ts","app/components/ui/profile/ProfileEdit/ProfileEdit.tsx","app/components/ui/profile/ProfileFavorites/index.ts","app/components/ui/profile/ProfileFavorites/ProfileFavorites.tsx","app/components/ui/profile/ProfileLikes/index.ts","app/components/ui/profile/ProfileLikes/ProfileLikes.tsx","app/components/ui/profile/UserProfile/index.ts","app/components/ui/profile/UserProfile/UserProfile.tsx","app/components/pages/ProfilePage/index.ts","app/components/pages/ProfilePage/ProfilePage.tsx","app/layouts/profile.tsx"],"sourcesContent":["import { Breadcrumbs as MuiBreadcrumbs, Link } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport withBreadcrumbs, { BreadcrumbsRoute } from 'react-router-breadcrumbs-hoc';\r\nimport { Link as RouterLink, LinkProps, Route, RouteComponentProps } from 'react-router-dom';\r\nimport { getRoomById } from '../../../store/rooms';\r\nimport { getUserById } from '../../../store/users';\r\n\r\ntype RouteParams = {\r\n  userId: string;\r\n  roomId: string;\r\n  route: string;\r\n};\r\n\r\nconst UserBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const user = useSelector(getUserById(props.match.params.userId));\r\n  return <span>{`${user?.firstName} ${user?.secondName}`}</span>;\r\n};\r\n\r\nconst RoomBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const room = useSelector(getRoomById(props.match.params.roomId));\r\n  return <span>Номер №{room?.roomNumber}</span>;\r\n};\r\n\r\nconst UserRouteBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const route = props.match.params.route;\r\n\r\n  let breadcrumbText;\r\n  switch (route) {\r\n    case 'booking':\r\n      breadcrumbText = 'Мои бронирования';\r\n      break;\r\n    case 'dashboard':\r\n      breadcrumbText = 'Панель администратора';\r\n      break;\r\n    case 'likes':\r\n      breadcrumbText = 'Понравилось';\r\n      break;\r\n    case 'favorites':\r\n      breadcrumbText = 'Избранное';\r\n      break;\r\n    case 'edit':\r\n      breadcrumbText = 'Редактировать профиль';\r\n      break;\r\n\r\n    default:\r\n      breadcrumbText = '';\r\n      break;\r\n  }\r\n  return <span>{breadcrumbText}</span>;\r\n};\r\n\r\nconst routeConfig = [\r\n  {\r\n    path: '/',\r\n    breadcrumb: 'Главная',\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    breadcrumb: 'Доступные номера',\r\n  },\r\n  {\r\n    path: '/rooms/:roomId?',\r\n    breadcrumb: RoomBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile',\r\n    breadcrumb: 'Профиль',\r\n  },\r\n  {\r\n    path: '/profile/:userId?',\r\n    breadcrumb: UserBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile/:userId?/:route?',\r\n    breadcrumb: UserRouteBreadcrumb,\r\n  },\r\n];\r\n\r\nconst LinkRouter = (props: LinkProps) => (\r\n  <Link {...props} className='breadcrumbs-item' underline='hover' component={RouterLink} />\r\n);\r\n\r\ntype BreadcrumbsPropsType = {\r\n  breadcrumbs: any;\r\n};\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsPropsType> = ({ breadcrumbs }) => {\r\n  return (\r\n    <div className='breadcrumbs'>\r\n      <Route>\r\n        {() => {\r\n          return (\r\n            <MuiBreadcrumbs aria-label='breadcrumb'>\r\n              {breadcrumbs.map(({ match, breadcrumb }: BreadcrumbsRoute, index: number) => {\r\n                const last = index === breadcrumbs.length - 1;\r\n                return last ? (\r\n                  <span className='breadcrumbs-item--last' key={match.url}>\r\n                    {breadcrumb}\r\n                  </span>\r\n                ) : (\r\n                  <span key={match.url}>\r\n                    <LinkRouter key={match.url} to={match.url}>\r\n                      {breadcrumb}\r\n                    </LinkRouter>\r\n                  </span>\r\n                );\r\n              })}\r\n            </MuiBreadcrumbs>\r\n          );\r\n        }}\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withBreadcrumbs(routeConfig)(Breadcrumbs);\r\n","import Breadcrumbs from './Breadcrumbs';\r\n\r\nexport default Breadcrumbs;\r\n","import React from 'react';\r\nimport Slider, { CustomArrowProps, Settings as SlickSettings } from 'react-slick';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\nconst defaultSettings = {\r\n  dots: true,\r\n  nextArrow: <NextButton />,\r\n  prevArrow: <PrevButton />,\r\n  infinite: true,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nfunction NextButton({ onClick }: CustomArrowProps) {\r\n  return (\r\n    <button className='slick-arrow slick-arrow--next' onClick={onClick}>\r\n      <ChevronRightIcon />\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction PrevButton({ onClick }: CustomArrowProps) {\r\n  return (\r\n    <button className='slick-arrow slick-arrow--before' onClick={onClick}>\r\n      <ChevronLeftIcon />\r\n    </button>\r\n  );\r\n}\r\n\r\ntype ImageSliderProps = {\r\n  children: React.ReactNode | React.ReactNode[];\r\n  settings?: SlickSettings;\r\n  [x: string]: any;\r\n};\r\n\r\nconst ImageSlider: React.FC<ImageSliderProps> = ({ children, ...settings }) => {\r\n  return (\r\n    <Slider {...defaultSettings} {...settings}>\r\n      {children}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","import ImageSlider from './ImageSlider';\r\n\r\nexport default ImageSlider;\r\n","import ButtonLike from './ButtonLike';\r\n\r\nexport default ButtonLike;\r\n","import { IconButton, IconButtonProps } from '@material-ui/core';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../../store/users';\r\n\r\ntype ButtonFavoriteProps = IconButtonProps & {\r\n  displayCount: number;\r\n  status: boolean;\r\n  onToggle: () => void;\r\n};\r\n\r\nconst ButtonLike: React.FC<ButtonFavoriteProps> = ({ displayCount, status, onToggle }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  return (\r\n    <IconButton\r\n      aria-label='like'\r\n      onClick={onToggle}\r\n      className={status ? 'like-button like-button--active' : 'like-button'}\r\n      disableRipple\r\n      disabled={!isLoggedIn}\r\n    >\r\n      <div className='like-button__wrapper'>\r\n        <span className='visually-hidden'>Количество лайков:</span>\r\n        {status ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n        {displayCount}\r\n      </div>\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ButtonLike;\r\n","import ReviewLikes from './ReviewLikes';\r\n\r\nexport default ReviewLikes;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createLike, getLikesByReviewId, removeLike } from '../../../../store/likes';\r\nimport { getCurrentUserId } from '../../../../store/users';\r\nimport ButtonLike from '../../../common/ButtonLike';\r\n\r\ntype ReviewLikesProps = {\r\n  reviewId: string;\r\n};\r\n\r\nconst ReviewLikes: React.FC<ReviewLikesProps> = ({ reviewId }) => {\r\n  const [status, setStatus] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const likes = useSelector(getLikesByReviewId(reviewId));\r\n\r\n  const isLiked = likes.some(like => like.userId === currentUserId);\r\n\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      setStatus(isLiked);\r\n    }\r\n  }, [likes, currentUserId]);\r\n\r\n  const toggleLike = () => {\r\n    const likeData = { userId: currentUserId || '', reviewId };\r\n\r\n    if (isLiked) {\r\n      dispatch(removeLike(likeData));\r\n    } else {\r\n      dispatch(createLike(likeData));\r\n    }\r\n  };\r\n\r\n  return <ButtonLike displayCount={likes.length} status={status} onToggle={toggleLike} />;\r\n};\r\n\r\nexport default ReviewLikes;\r\n","import Review from './Review';\r\n\r\nexport default Review;\r\n","import ClearIcon from '@mui/icons-material/Clear';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { IconButton } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeReview, updateReview } from '../../../../store/reviews';\r\nimport { getRoomById, updateRoomData } from '../../../../store/rooms';\r\nimport { getCurrentUserData, getUserById } from '../../../../store/users';\r\nimport { ReviewType } from '../../../../types/types';\r\nimport formatDate from '../../../../utils/formatDate';\r\nimport Avatar from '../../../common/Avatar';\r\nimport Button from '../../../common/Button';\r\nimport { TextAreaField } from '../../../common/Fields';\r\nimport Loader from '../../../common/Loader';\r\nimport Rating from '../../../common/Rating';\r\nimport Tooltip from '../../../common/Tooltip';\r\nimport ReviewLikes from '../ReviewLikes';\r\n\r\ntype ReviewProps = {\r\n  review: ReviewType;\r\n};\r\n\r\nconst Review: React.FC<ReviewProps> = ({ review }) => {\r\n  const dispatch = useDispatch();\r\n  const [content, setContent] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const currentRoomData = useSelector(getRoomById(review.roomId));\r\n  const user = useSelector(getUserById(review.userId || ''));\r\n  const currentUser = useSelector(getCurrentUserData());\r\n\r\n  const displayReviewData = () => {\r\n    if (review.created_at !== review.updated_at) {\r\n      return `Редактирован: ${formatDate(review?.updated_at || '')}`;\r\n    }\r\n    return formatDate(review?.created_at || '');\r\n  };\r\n\r\n  const isAdmin = currentUser?.role === 'admin';\r\n  const isAuthor = review.userId === currentUser?._id;\r\n  const showDeleteBtn = isAdmin || isAuthor;\r\n\r\n  const handleChangeReview = () => {\r\n    setEditMode(false);\r\n    const payload = { _id: review._id, rating: review.rating, roomId: review.roomId, content: review.content };\r\n    dispatch(updateReview(payload));\r\n  };\r\n\r\n  const handleRemoveReview = () => {\r\n    dispatch(removeReview(review._id || ''));\r\n    const updateRoomPayload = {\r\n      _id: currentRoomData?._id || 'not found',\r\n      price: currentRoomData?.price || 0,\r\n      roomNumber: currentRoomData?.roomNumber || 'not found',\r\n      countReviews: Number(currentRoomData?.countReviews) - 1,\r\n      rate: Number(currentRoomData?.rate) - review.rating,\r\n    };\r\n    dispatch(updateRoomData(updateRoomPayload));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContent(review.content);\r\n  }, [review]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <li className='reviews-list__item'>\r\n        <div className='review'>\r\n          <div className='review__avatar'>\r\n            <div className='avatar'>\r\n              <Avatar alt='пользователя' src={user.avatarPhoto || ''} className='avatar__img' />\r\n            </div>\r\n            <ReviewLikes reviewId={review._id || ''} />\r\n          </div>\r\n          <div className='review__content'>\r\n            <div className='review__user-name'>\r\n              {`${user.firstName} ${user.secondName}`}\r\n              {isAuthor && (\r\n                <div className='review__edit-btn'>\r\n                  <Tooltip title='Редактировать'>\r\n                    <IconButton onClick={() => setEditMode(true)}>\r\n                      <EditIcon fontSize='small' />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n              {showDeleteBtn && (\r\n                <div className='review__delete-btn'>\r\n                  <Tooltip title='Удалить отзыв'>\r\n                    <IconButton onClick={handleRemoveReview}>\r\n                      <ClearIcon fontSize='small' />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n              <div className='review__rating'>\r\n                <Rating value={review.rating} readOnly />\r\n              </div>\r\n            </div>\r\n            <p className='review__date'>{displayReviewData()}</p>\r\n            {editMode ? (\r\n              <>\r\n                <TextAreaField value={content} onChange={handleChange} rows={3} />\r\n                <Button variant='outlined' size='small' style={{ marginTop: '5px' }} onClick={handleChangeReview}>\r\n                  Применить\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <p className='review__message'>{content}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n  return <Loader />;\r\n};\r\n\r\nexport default Review;\r\n","import React from 'react';\r\nimport { ReviewType } from '../../../../types/types';\r\nimport Review from '../Review';\r\n\r\ntype ReviewsListProps = {\r\n  reviews: ReviewType[];\r\n};\r\n\r\nconst ReviewsList: React.FC<ReviewsListProps> = ({ reviews }) => {\r\n  return (\r\n    <ul className='reviews-list'>\r\n      {reviews.map(review => (\r\n        <Review key={review._id} review={review} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import ReviewsList from './ReviewsList';\r\n\r\nexport default ReviewsList;\r\n","import Badge from './Badge';\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport { Badge as MuiBadge, BadgeProps as MuiBadgeProps } from '@mui/material';\r\n\r\ntype BadgeProps = MuiBadgeProps & {\r\n  className: string;\r\n};\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ children, className, ...rest }) => {\r\n  return (\r\n    <MuiBadge className={className} {...rest}>\r\n      {children}\r\n    </MuiBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import AcUnitIcon from '@mui/icons-material/AcUnit';\r\nimport ComputerIcon from '@mui/icons-material/Computer';\r\nimport WifiIcon from '@mui/icons-material/Wifi';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getReviewsByRoomId } from '../../../../store/reviews';\r\nimport declOfNum from '../../../../utils/declOfNum';\r\nimport Badge from '../../../common/Badge';\r\nimport Divider from '../../../common/Divider';\r\nimport ImageSlider from '../../../common/ImageSlider';\r\nimport Rating from '../../../common/Rating';\r\nimport { RoomType } from '../../../../types/types';\r\n\r\nconst comfortIconsMap: { [x: string]: JSX.Element } = {\r\n  hasWifi: <WifiIcon />,\r\n  hasConditioner: <AcUnitIcon />,\r\n  hasWorkSpace: <ComputerIcon />,\r\n};\r\n\r\nconst RoomCard: React.FC<RoomType> = ({ _id, roomNumber, price, type, images, comforts }) => {\r\n  const reviews = useSelector(getReviewsByRoomId(_id));\r\n  const countReviews = reviews ? reviews.length : 0;\r\n  const rating = countReviews > 0 ? reviews.reduce((acc, cur) => acc + cur.rating, 0) : 0;\r\n\r\n  return (\r\n    <div className='room-card'>\r\n      {comforts && (\r\n        <Badge className='badge'>\r\n          {comforts.map(comfort => (\r\n            <div key={comfort}>{comfortIconsMap[comfort]}</div>\r\n          ))}\r\n        </Badge>\r\n      )}\r\n      <ImageSlider className='room-card__gallery'>\r\n        {images &&\r\n          images.map(img => (\r\n            <div className='room-card__gallery-item' key={img}>\r\n              <img className='room-card__gallery-item--img' src={img} alt='roomsPhoto' />\r\n            </div>\r\n          ))}\r\n      </ImageSlider>\r\n      <Link to={`/rooms/${_id}`} className='room-card__description'>\r\n        <div className='room-card__description-row'>\r\n          <h3 className='room-card__title'>\r\n            № <span className='room-card__title--big'>{roomNumber}</span>\r\n            {type === 'Люкс' && <span className='room-card__type'>{type}</span>}\r\n          </h3>\r\n          <div className='room-card__rentPerDay'>\r\n            <span>{price}&#8381;</span> в сутки\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className='room-card__description-row'>\r\n          <div className='room-card__rating'>\r\n            <Rating name='read-only' value={rating} totalCount={countReviews} readOnly />\r\n          </div>\r\n          <div className='room-card__reviews'>\r\n            <span className='room-card__reviews-count'>{`${countReviews} ${declOfNum(countReviews, [\r\n              'Отзыв',\r\n              'Отзыва',\r\n              'Отзывов',\r\n            ])}`}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCard;\r\n","import RoomCard from './RoomCard';\r\n\r\nexport default RoomCard;\r\n","import React from 'react';\r\nimport RoomCard from '../RoomCard';\r\nimport { RoomType } from '../../../../types/types';\r\n\r\ntype RoomListProps = {\r\n  rooms: RoomType[];\r\n};\r\n\r\nconst RoomsList: React.FC<RoomListProps> = ({ rooms }) => {\r\n  return (\r\n    <ul className='rooms__list'>\r\n      {rooms.map(room => (\r\n        <li key={room._id} className='rooms__list-item'>\r\n          <RoomCard {...room} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(RoomsList);\r\n","import Sidebar from './Sidebar';\r\n\r\nexport default Sidebar;\r\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport { MenuItem, MenuList } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getCurrentUserData } from '../../../store/users';\r\n\r\nconst Sidebar = () => {\r\n  const currentUser = useSelector(getCurrentUserData());\r\n\r\n  return (\r\n    <MenuList className='sidebar'>\r\n      <MenuItem component={NavLink} className='sidebar-menu__item' to={`/profile/${currentUser?._id}`} exact>\r\n        <AccountCircleIcon />\r\n        Мой профиль\r\n      </MenuItem>\r\n      {currentUser?.role === 'admin' && (\r\n        <MenuItem\r\n          component={NavLink}\r\n          className='sidebar-menu__item'\r\n          to={`/profile/${currentUser?._id}/dashboard`}\r\n          exact\r\n        >\r\n          <AdminPanelSettingsIcon />\r\n          Панель администратора\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem component={NavLink} className='sidebar-menu__item' to={`/profile/${currentUser?._id}/booking`} exact>\r\n        <StarBorderIcon />\r\n        Мои Бронирования\r\n      </MenuItem>\r\n      <MenuItem component={NavLink} className='sidebar-menu__item' to={`/profile/${currentUser?._id}/likes`} exact>\r\n        <FavoriteBorderIcon />\r\n        Понравилось\r\n      </MenuItem>\r\n      <MenuItem component={NavLink} className='sidebar-menu__item' to={`/profile/${currentUser?._id}/favorites`} exact>\r\n        <BookmarkBorderIcon />\r\n        Избранное\r\n      </MenuItem>\r\n\r\n      <MenuItem className='sidebar-menu__item' component={NavLink} to={`/profile/${currentUser?._id}/edit`}>\r\n        <SettingsIcon />\r\n        Редактировать профиль\r\n      </MenuItem>\r\n    </MenuList>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { TableCell, TableHead, TableRow, TableSortLabel, TableHeadProps as MuiTableHeaderProps } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype TableHeaderProps = MuiTableHeaderProps & {\r\n  headCells: {\r\n    id: string;\r\n    numeric?: boolean;\r\n    disablePadding?: boolean;\r\n    label: string;\r\n  }[];\r\n  sortBy?: { path: string; order: 'asc' | 'desc' };\r\n  onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\r\n};\r\n\r\nconst TableHeader: React.FC<TableHeaderProps> = ({ headCells, sortBy, onRequestSort }) => {\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n    if (onRequestSort) {\r\n      onRequestSort(event, property);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell?.numeric ? 'right' : 'left'}\r\n            padding={headCell?.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={sortBy && sortBy.path === headCell.id ? sortBy.order : false}\r\n          >\r\n            {sortBy && (\r\n              <TableSortLabel\r\n                active={sortBy.path === headCell.id}\r\n                direction={sortBy.path === headCell.id ? sortBy.order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {sortBy.path === headCell.id ? (\r\n                  <span className='visually-hidden'>\r\n                    {sortBy.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            )}\r\n            {!sortBy && headCell.label}\r\n          </TableCell>\r\n        ))}\r\n        <TableCell />\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import TableHeader from './TableHeader';\r\n\r\nexport default TableHeader;\r\n","import TableBody from './TableBody';\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport { TableBody as MuiTableBody, TableCell, TableRow, TableBodyProps as MuiTableBodyProps } from '@mui/material';\r\n\r\ntype TableBodyProps = MuiTableBodyProps & {\r\n  itemsCount?: number;\r\n  page?: number;\r\n  rowsPerPage?: number;\r\n};\r\n\r\nconst TableBody: React.FC<TableBodyProps> = ({ itemsCount, page, rowsPerPage, children }) => {\r\n  const emptyRows = Number(page) > 0 ? Math.max(0, (1 + Number(page)) * Number(rowsPerPage) - Number(itemsCount)) : 0;\r\n\r\n  return (\r\n    <MuiTableBody>\r\n      {children}\r\n      {emptyRows > 0 && (\r\n        <TableRow\r\n          sx={{\r\n            height: 68 * emptyRows,\r\n          }}\r\n        >\r\n          <TableCell colSpan={6} />\r\n        </TableRow>\r\n      )}\r\n    </MuiTableBody>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './Table';\r\n\r\nexport default Table;\r\n","import { Table as MuiTable, TableContainer, Toolbar, TableProps } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst Table: React.FC<TableProps> = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      {title && (\r\n        <Toolbar>\r\n          <h2 style={{ flex: '1 1 100%' }}>{title}</h2>\r\n        </Toolbar>\r\n      )}\r\n      <TableContainer>\r\n        <MuiTable sx={{ minWidth: 750 }} aria-labelledby='tableTitle' size='medium'>\r\n          {children}\r\n        </MuiTable>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Chip as MuiChip, ChipProps } from '@mui/material';\r\n\r\nconst Chip: React.FC<ChipProps> = ({ label, color, ...props }) => {\r\n  return <MuiChip label={label} color={color || 'primary'} {...props} />;\r\n};\r\n\r\nexport default Chip;\r\n","import { DialogContent } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getRoomById } from '../../../../store/rooms';\r\nimport Modal from '../../../common/Modal';\r\nimport { RoomEditForm } from '../../forms';\r\n\r\ntype RoomModalProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  roomId: string;\r\n};\r\n\r\nconst RoomEditModal: React.FC<RoomModalProps> = ({ open, onClose, roomId }) => {\r\n  const currentRoom = useSelector(getRoomById(roomId));\r\n\r\n  return (\r\n    <Modal title='Редактирование' open={open} onClose={onClose}>\r\n      <DialogContent>\r\n        <h2>Редактировать номер {currentRoom?.roomNumber}</h2>\r\n        <RoomEditForm roomData={currentRoom} onCloseModal={onClose} />\r\n      </DialogContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default React.memo(RoomEditModal);\r\n","import RoomEditModal from './RoomEditModal';\r\n\r\nexport default RoomEditModal;\r\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport { IconButton, TableCell, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeBooking } from '../../../../../store/bookings';\r\nimport { removeBookingRoom } from '../../../../../store/rooms';\r\nimport { BookingType } from '../../../../../types/types';\r\nimport { getDateDDMMYYYY } from '../../../../../utils/formatDate';\r\nimport history from '../../../../../utils/history';\r\nimport Tooltip from '../../../../common/Tooltip';\r\nimport { getGuestsLabel } from '../../../GuestsCounter/GuestsCounter';\r\n\r\ntype BookingTableRowProps = {\r\n  row: BookingType;\r\n};\r\n\r\nconst BookingTableRow: React.FC<BookingTableRowProps> = ({ row }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemoveBooking = () => {\r\n    dispatch(removeBooking(row._id));\r\n    dispatch(removeBookingRoom({ roomId: row.roomId, _id: row._id || '' }));\r\n  };\r\n\r\n  const handleOpenUserPage = (userId: string) => {\r\n    history.push(`/profile/${userId}`);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component='th' scope='row'>\r\n        {row._id}\r\n      </TableCell>\r\n      <TableCell component='th' scope='row'>\r\n        {getDateDDMMYYYY(row.arrivalDate)}\r\n      </TableCell>\r\n      <TableCell>{getDateDDMMYYYY(row.departureDate)}</TableCell>\r\n      <TableCell>{getGuestsLabel(row.adults, row.children, row.babies)}</TableCell>\r\n      <TableCell align='right'>{row.totalPrice}&#8381;</TableCell>\r\n      <TableCell>\r\n        <div className='booking-row__btns'>\r\n          <Tooltip title='Страница пользователя' disableInteractive={true}>\r\n            <IconButton\r\n              aria-label='expand row'\r\n              size='small'\r\n              color='primary'\r\n              onClick={() => handleOpenUserPage(row.userId || 'not found')}\r\n            >\r\n              <AccountCircleIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title='Отменить бронирование' disableInteractive={true}>\r\n            <IconButton aria-label='expand row' size='small' color='error' onClick={handleRemoveBooking}>\r\n              <CancelIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default BookingTableRow;\r\n","import React from 'react';\r\nimport { BookingType } from '../../../../../types/types';\r\nimport { Table, TableBody, TableHeader } from '../../../../common/Table';\r\nimport BookingTableRow from './BookingTableRow';\r\n\r\ntype BookingTableProps = {\r\n  bookings: BookingType[];\r\n  roomNumber: string | number;\r\n};\r\n\r\nconst BookingTable: React.FC<BookingTableProps> = ({ bookings, roomNumber }) => {\r\n  const headCells = [\r\n    { id: 'bookingId', label: 'ID' },\r\n    { id: 'arrivalDate', label: 'Дата заезда' },\r\n    { id: 'departureDate', label: 'Дата выезда' },\r\n    { id: 'guests', label: 'Кол-во гостей' },\r\n    { id: 'totalPrice', label: 'Цена', numeric: true },\r\n  ];\r\n  return (\r\n    <>\r\n      <h3 style={{ margin: 10 }}>{`Список бронирований номера №${roomNumber}`}</h3>\r\n      <Table size='small' aria-label='purchases'>\r\n        <TableHeader headCells={headCells} />\r\n        <TableBody>\r\n          {bookings.map(bookingRow => (\r\n            <BookingTableRow key={bookingRow._id} row={bookingRow} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookingTable;\r\n","import EditIcon from '@mui/icons-material/Edit';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { Collapse, IconButton, TableCell, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getBookingsByRoomId } from '../../../../../store/bookings';\r\nimport { RoomType } from '../../../../../types/types';\r\nimport Chip from '../../../../common/Chip/Chip';\r\nimport Tooltip from '../../../../common/Tooltip';\r\nimport RoomEditModal from '../../../modals/RoomEditModal';\r\nimport BookingTable from '../BookingTable/BookingTable';\r\n\r\ntype RoomsListTableRowProps = {\r\n  row: RoomType;\r\n};\r\n\r\nconst RoomsListTableRow: React.FC<RoomsListTableRowProps> = ({ row }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const bookings = useSelector(getBookingsByRoomId(row._id));\r\n\r\n  useEffect(() => {\r\n    if (bookings.length === 0) {\r\n      setOpen(false);\r\n    }\r\n  }, [bookings]);\r\n\r\n  return (\r\n    <>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell component='th' scope='row'>\r\n          <Link to={`/rooms/${row._id}`}>{row.roomNumber}</Link>\r\n        </TableCell>\r\n        <TableCell>{row.type}</TableCell>\r\n        <TableCell align='right'>{row.rate}</TableCell>\r\n        <TableCell align='right'>{row.price}&#8381;</TableCell>\r\n        <TableCell align='right'>\r\n          {bookings.length > 0 ? (\r\n            <>\r\n              <Chip\r\n                label='Забронирован'\r\n                color='error'\r\n                onMouseDown={e => {\r\n                  e.stopPropagation();\r\n                }}\r\n                onDelete={() => setOpen(!open)}\r\n                deleteIcon={\r\n                  <Tooltip title='Подробнее' disableInteractive>\r\n                    <IconButton aria-label='expand row' size='small'>\r\n                      {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <Chip label='Свободен' color='success' />\r\n          )}\r\n        </TableCell>\r\n        <TableCell align='right'>\r\n          <Tooltip title='Редактировать номер' disableInteractive={true}>\r\n            <IconButton aria-label='expand row' size='small' color='primary' onClick={() => setShowEditModal(true)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ padding: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout='auto' unmountOnExit>\r\n            <BookingTable bookings={bookings} roomNumber={row.roomNumber} />\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n      {showEditModal && <RoomEditModal open={showEditModal} onClose={() => setShowEditModal(false)} roomId={row._id} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomsListTableRow;\r\n","import { TablePagination } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { usePagination, useSort } from '../../../../../hooks';\r\nimport { getRooms, getRoomsLoadingStatus } from '../../../../../store/rooms';\r\nimport { Table, TableBody, TableHeader } from '../../../../common/Table';\r\nimport RoomsListTableRow from './RoomsListTableRow';\r\n\r\n\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'roomNumber',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: '№ Номера',\r\n  },\r\n  {\r\n    id: 'type',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Тип',\r\n  },\r\n  {\r\n    id: 'rate',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Рейтинг',\r\n  },\r\n  {\r\n    id: 'price',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Аренда в сутки',\r\n  },\r\n  {\r\n    id: 'bookings',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Статус',\r\n  },\r\n];\r\n\r\nconst RoomsListTable = () => {\r\n  const rowsPerPageOptions = [5, 10, 25];\r\n  const rooms = useSelector(getRooms());\r\n  const roomsIsLoading = useSelector(getRoomsLoadingStatus());\r\n\r\n  const { sortedItems, sortBy, handleRequestSort } = useSort(rooms || [], { path: 'bookings', order: 'desc' });\r\n  const {\r\n    itemsListCrop: roomsCroppedList,\r\n    currentPage,\r\n    pageSize,\r\n    handleChangePage,\r\n    handleChangePageSize,\r\n  } = usePagination(sortedItems, rowsPerPageOptions[0]);\r\n\r\n  return (\r\n    <>\r\n      {!roomsIsLoading && (\r\n        <>\r\n          <Table title='Список номеров'>\r\n            <TableHeader headCells={headCells} sortBy={sortBy} onRequestSort={handleRequestSort} />\r\n            <TableBody itemsCount={sortedItems.length} page={currentPage - 1} rowsPerPage={pageSize}>\r\n              {roomsCroppedList.map(row => (\r\n                <RoomsListTableRow key={row._id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component='div'\r\n            count={rooms.length}\r\n            rowsPerPage={pageSize}\r\n            page={currentPage - 1}\r\n            onPageChange={(event, value) => handleChangePage(event, value + 1)}\r\n            onRowsPerPageChange={handleChangePageSize}\r\n            labelRowsPerPage='Номеров на странице'\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomsListTable;\r\n","import AdminDashboard from './AdminDashboard';\r\n\r\nexport default AdminDashboard;\r\n","import { Paper } from '@mui/material';\r\nimport React from 'react';\r\nimport RoomsListTable from './RoomsListTable/RoomsListTable';\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <RoomsListTable />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { Paper } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeBooking } from '../../../../store/bookings';\r\nimport { getRoomById, removeBookingRoom } from '../../../../store/rooms';\r\nimport { BookingType } from '../../../../types/types';\r\nimport { getDateDDMMYYYY } from '../../../../utils/formatDate';\r\nimport Button from '../../../common/Button';\r\nimport { getGuestsLabel } from '../../GuestsCounter/GuestsCounter';\r\nimport RoomCard from '../../rooms/RoomCard';\r\n\r\nconst BookingCard: React.FC<BookingType> = ({\r\n  _id,\r\n  arrivalDate,\r\n  departureDate,\r\n  adults,\r\n  children,\r\n  babies,\r\n  totalPrice,\r\n  roomId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const room = useSelector(getRoomById(roomId));\r\n\r\n  const handleRemoveBooking = () => {\r\n    dispatch(removeBooking(_id));\r\n    dispatch(removeBookingRoom({ roomId, _id: _id || '' }));\r\n  };\r\n\r\n  return (\r\n    <Paper className='booking-card'>\r\n      <div className='booking-card__wrapper'>\r\n        <div className='booking-content'>\r\n          <h2>\r\n            № <span>{_id}</span>\r\n          </h2>\r\n          <h3 className='booking-info__title'>Информация о бронировании</h3>\r\n          <table className='booking-info'>\r\n            <tbody className='booking-info__body'>\r\n              <tr className='booking-info__item'>\r\n                <td>Дата прибытия:</td>\r\n                <td>\r\n                  <span>{`${getDateDDMMYYYY(arrivalDate)}`}</span>\r\n                </td>\r\n              </tr>\r\n              <tr className='booking-info__item'>\r\n                <td>Дата выезда:</td>\r\n                <td>\r\n                  <span>{`${getDateDDMMYYYY(departureDate)}`}</span>\r\n                </td>\r\n              </tr>\r\n              <tr className='booking-info__item'>\r\n                <td>Количество гостей:</td>\r\n                <td>\r\n                  <span>{getGuestsLabel(adults, children, babies)}</span>\r\n                </td>\r\n              </tr>\r\n              <tr className='booking-info__item'>\r\n                <td>Стоимость бронирования:</td>\r\n                <td>\r\n                  <span>{`${totalPrice}`}&#8381;</span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className='booking-card__btns'>\r\n          <div style={{ width: '100%' }}>\r\n            <RoomCard\r\n              _id={room?._id || 'id not found'}\r\n              roomNumber={room?.roomNumber || 'not found'}\r\n              price={room?.price || 0}\r\n              type={room?.type}\r\n              images={room?.images}\r\n              comforts={room?.comforts}\r\n            />\r\n          </div>\r\n          <Link to={`/rooms/${roomId}`}>\r\n            <Button size='small' fullWidth>\r\n              Перейти на страницу номера\r\n            </Button>\r\n          </Link>\r\n          <Button size='small' variant='outlined' color='error' onClick={handleRemoveBooking}>\r\n            Отменить бронирование\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BookingCard;\r\n","import ProfileBooking from './ProfileBooking';\r\n\r\nexport default ProfileBooking;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getBookingsByUserId } from '../../../../store/bookings';\r\nimport { getCurrentUserId } from '../../../../store/users';\r\nimport BookingCard from '../../booking/BookingCard/BookingCard';\r\n\r\nconst ProfileBooking = () => {\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const bookings = useSelector(getBookingsByUserId(currentUserId || 'not found'));\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <h1 style={{ marginBottom: '20px' }}>Мои бронирования</h1>\r\n      <div className='booking-list' style={{ width: '100%' }}>\r\n        {bookings.map(booking => (\r\n          <BookingCard key={booking._id} {...booking} />\r\n        ))}\r\n        {bookings.length === 0 && <h3>Список бронирований пуст</h3>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileBooking;\r\n","import { UserType } from '../../../../types/types';\r\nimport { ValidatorConfigType } from '../../../../utils/validator';\r\n\r\ntype ConfigType = {\r\n  [Property in keyof UserType]?: ValidatorConfigType[Property];\r\n};\r\n\r\nconst validatorConfig: ConfigType = {\r\n  firstName: {\r\n    isRequired: {\r\n      message: 'Поле \"Имя\" обязательно для заполнения',\r\n    },\r\n  },\r\n  secondName: {\r\n    isRequired: {\r\n      message: 'Поле \"Фамилия\" обязательно для заполнения',\r\n    },\r\n  },\r\n  email: {\r\n    isRequired: {\r\n      message: 'Электронная почта обязательна для заполнения',\r\n    },\r\n    isEmail: {\r\n      message: 'Поле \"Email\" введено не корректно',\r\n    },\r\n  },\r\n  password: {\r\n    isRequired: {\r\n      message: 'Поле \"Пароль\" обязательно для заполнения',\r\n    },\r\n    isCapitalSymbol: {\r\n      message: 'Пароль должен содержать хотя бы 1 заглавную букву',\r\n    },\r\n    isContainDigit: {\r\n      message: 'Пароль должен содержать хотя бы 1 цифру',\r\n    },\r\n\r\n    min: {\r\n      value: 8,\r\n      message: 'Пароль должен содержать минимум 8 символов',\r\n    },\r\n  },\r\n};\r\n\r\nexport default validatorConfig;\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, useForm } from '../../../../hooks';\r\nimport { getCurrentUserData, updateUserData } from '../../../../store/users';\r\nimport { UserType } from '../../../../types/types';\r\nimport Button from '../../../common/Button';\r\nimport { DatePickerField, InputField, RadioGroup } from '../../../common/Fields';\r\nimport validatorConfig from './validatorConfig';\r\n\r\nconst genderItems = [\r\n  { id: 'male', title: 'Мужчина' },\r\n  { id: 'female', title: 'Женщина' },\r\n];\r\n\r\nconst ProfileEditForm = () => {\r\n  const currentUserData = useSelector(getCurrentUserData());\r\n\r\n  const initialData: UserType = {\r\n    firstName: currentUserData?.firstName || '',\r\n    secondName: currentUserData?.secondName || '',\r\n    gender: currentUserData?.gender || 'male',\r\n    birthYear: currentUserData?.birthYear || Date.now(),\r\n    role: currentUserData?.role || 'user',\r\n  };\r\n\r\n  const { data, errors, handleInputChange, handleKeyDown, validate } = useForm(initialData, true, validatorConfig);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (validate(data)) {\r\n      dispatch(updateUserData(data));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form data={data} errors={errors} handleChange={handleInputChange} handleKeyDown={handleKeyDown}>\r\n        <InputField autoFocus name='firstName' label='Имя' />\r\n        <InputField name='secondName' label='Фамилия' />\r\n        <RadioGroup name='gender' items={genderItems} />\r\n        <DatePickerField\r\n          onChange={handleInputChange}\r\n          value={data.birthYear}\r\n          openTo='year'\r\n          mask='__.__.____'\r\n          label='Дата Рождения'\r\n          name='birthYear'\r\n          minDate={new Date('1950-01-01')}\r\n          renderInput={params => (\r\n            <TextField {...params} {...(errors?.birthYear && { error: true, helperText: errors?.birthYear })} />\r\n          )}\r\n        />\r\n        <Button type='submit' onClick={handleSubmit} fullWidth disabled={Object.keys(errors).length !== 0}>\r\n          Обновить\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEditForm;\r\n","import ProfileEdit from './ProfileEdit';\r\n\r\nexport default ProfileEdit;\r\n","import { Paper } from '@mui/material';\r\nimport React from 'react';\r\nimport ProfileEditForm from '../../forms/ProfileEditForm/ProfileEditForm';\r\n\r\nconst ProfileEdit = () => {\r\n  return (\r\n    <main className='profile-edit'>\r\n      <Paper elevation={3} className='form-card profileEdit-form'>\r\n        <h2>Редактирование профиля</h2>\r\n        <ProfileEditForm />\r\n      </Paper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import ProfileFavorites from './ProfileFavorites';\r\n\r\nexport default ProfileFavorites;\r\n","import React from 'react';\r\nimport localStorageService from '../../../../services/localStorage.service';\r\nimport { getRoomsByIds } from '../../../../store/rooms';\r\nimport { useSelector } from 'react-redux';\r\nimport RoomsList from '../../rooms/RoomsList/RoomsList';\r\n\r\nconst ProfileFavorites = () => {\r\n  const favoritesRoomIds: string[] = JSON.parse(localStorageService.getFavoritesRoom() || '{}');\r\n  const rooms = useSelector(getRoomsByIds(favoritesRoomIds));\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <h1 style={{ marginBottom: '20px' }}>Мои любимые номера</h1>\r\n      {rooms.length > 0 ? <RoomsList rooms={rooms} /> : <h3>Список пуст</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileFavorites;\r\n","import ProfileLikes from './ProfileLikes';\r\n\r\nexport default ProfileLikes;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getLikesByUserId } from '../../../../store/likes';\r\nimport { getReviewsByIds } from '../../../../store/reviews';\r\nimport { getCurrentUserId } from '../../../../store/users';\r\nimport ReviewsList from '../../reviews/ReviewsList';\r\n\r\nconst ProfileLikes = () => {\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const likes = useSelector(getLikesByUserId(currentUserId || 'not found'));\r\n  const reviewsIds = likes.map(el => el.reviewId);\r\n  const reviews = useSelector(getReviewsByIds(reviewsIds));\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <h1 style={{ marginBottom: '20px' }}>Вам понравились отзывы:</h1>\r\n      {reviews.length > 0 ? <ReviewsList reviews={reviews} /> : <h3>Список пуст</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileLikes;\r\n","import UserProfile from './UserProfile';\r\n\r\nexport default UserProfile;\r\n","import { Paper } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMockData } from '../../../../hooks';\r\nimport { getUserById } from '../../../../store/users';\r\nimport { getDateDDMMYYYY } from '../../../../utils/formatDate';\r\n\r\nconst UserProfile = ({ userId }: { userId: string }) => {\r\n  const currentUser = useSelector(getUserById(userId));\r\n\r\n  const { error, initialize, progress, status } = useMockData();\r\n\r\n  const handleClick = () => {\r\n    initialize();\r\n  };\r\n\r\n  return (\r\n    <main className='main-profile__page'>\r\n      <h1 className='visually-hidden'>Профиль пользователя отеля toxin</h1>\r\n      <h2>Страница пользователя {`${currentUser?.firstName} ${currentUser?.secondName}`}</h2>\r\n      <div className='user-card'>\r\n        <div>\r\n          <img className='user-card__avatarPhoto' src={currentUser?.avatarPhoto} alt='avatarPhoto' />\r\n        </div>\r\n        <Paper className='user-card__content'>\r\n          <p>Имя: {currentUser?.firstName}</p>\r\n          <p>Фамилия: {currentUser?.secondName}</p>\r\n          <p>Пол: {currentUser?.gender === 'male' ? 'Мужской' : 'Женский'}</p>\r\n          <p>Статус: {currentUser?.role === 'admin' ? 'Администратор' : 'Пользователь'}</p>\r\n          <p>Дата рождения: {getDateDDMMYYYY(currentUser?.birthYear || Date.now())}</p>\r\n        </Paper>\r\n      </div>\r\n\r\n      {currentUser?.role === 'admin' && (\r\n        <>\r\n          <h3>Инициализация данных в FireBase</h3>\r\n          <ul>\r\n            <li>Status: {status}</li>\r\n            <li>Progress: {progress}%</li>\r\n            {error && <li>error: {error}</li>}\r\n          </ul>\r\n          <button className='btn btn-primary' onClick={handleClick}>\r\n            Инициализировать\r\n          </button>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import ProfilePage from './ProfilePage';\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { getCurrentUserData } from '../../../store/users';\r\nimport Sidebar from '../../common/Sidebar';\r\nimport AdminDashboard from '../../ui/profile/AdminDashboard';\r\nimport ProfileBooking from '../../ui/profile/ProfileBooking';\r\nimport ProfileEdit from '../../ui/profile/ProfileEdit';\r\nimport ProfileFavorites from '../../ui/profile/ProfileFavorites';\r\nimport ProfileLikes from '../../ui/profile/ProfileLikes';\r\nimport UserProfile from '../../ui/profile/UserProfile';\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const { userId, route } = useParams<{ userId: string; route: string }>();\r\n  const currentUser = useSelector(getCurrentUserData());\r\n\r\n  const renderComponent = (route: string) => {\r\n    switch (route) {\r\n      case 'edit':\r\n        if (currentUser?._id === userId) {\r\n          return <ProfileEdit />;\r\n        } else {\r\n          return <Redirect to={`/profile/${currentUser?._id}`} />;\r\n        }\r\n      case 'booking':\r\n        return <ProfileBooking />;\r\n      case 'likes':\r\n        return <ProfileLikes />;\r\n      case 'favorites':\r\n        return <ProfileFavorites />;\r\n      case 'dashboard':\r\n        if (currentUser?.role === 'admin') {\r\n          return <AdminDashboard />;\r\n        } else {\r\n          return <Redirect to={`/profile/${currentUser?._id}`} />;\r\n        }\r\n      default:\r\n        return <UserProfile userId={userId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-page'>\r\n      {currentUser?._id === userId && (\r\n        <aside className='profile-sidebar'>\r\n          <Sidebar />\r\n        </aside>\r\n      )}\r\n      {renderComponent(route)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Breadcrumbs from '../components/common/Breadcrumbs';\r\nimport Container from '../components/common/Container';\r\nimport Footer from '../components/common/Footer/Footer';\r\nimport Header from '../components/common/Header/Header';\r\nimport ProfilePage from '../components/pages/ProfilePage';\r\nimport { getCurrentUserId } from '../store/users';\r\n\r\nconst Profile: React.FC = () => {\r\n  const { userId } = useParams<{ userId?: string }>();\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Breadcrumbs />\r\n        {userId ? <ProfilePage /> : <Redirect to={`profile/${currentUserId}`} />}\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["routeConfig","path","breadcrumb","props","room","useSelector","getRoomById","match","params","roomId","roomNumber","user","getUserById","userId","firstName","secondName","breadcrumbText","route","LinkRouter","Link","className","underline","component","RouterLink","withBreadcrumbs","breadcrumbs","map","index","length","url","to","defaultSettings","dots","nextArrow","NextButton","prevArrow","PrevButton","infinite","slidesToShow","slidesToScroll","onClick","ChevronRight","ChevronLeft","children","settings","displayCount","status","onToggle","isLoggedIn","getIsLoggedIn","disableRipple","disabled","Favorite","FavoriteBorder","reviewId","useState","setStatus","dispatch","useDispatch","currentUserId","getCurrentUserId","likes","getLikesByReviewId","isLiked","some","like","useEffect","likeData","removeLike","createLike","review","content","setContent","editMode","setEditMode","currentRoomData","currentUser","getCurrentUserData","isAdmin","role","isAuthor","_id","showDeleteBtn","Avatar","alt","src","avatarPhoto","Tooltip","title","IconButton","Edit","fontSize","removeReview","updateRoomPayload","price","countReviews","Number","rate","rating","updateRoomData","Clear","Rating","value","readOnly","created_at","updated_at","formatDate","onChange","e","target","rows","Button","variant","size","style","marginTop","payload","updateReview","Loader","reviews","rest","comfortIconsMap","hasWifi","Wifi","hasConditioner","AcUnit","hasWorkSpace","Computer","type","images","comforts","getReviewsByRoomId","reduce","acc","cur","comfort","ImageSlider","img","Divider","name","totalCount","declOfNum","RoomsList","rooms","React","MenuList","MenuItem","NavLink","exact","AccountCircle","AdminPanelSettings","StarBorder","BookmarkBorder","Settings","headCells","sortBy","onRequestSort","TableHead","TableRow","headCell","TableCell","align","numeric","padding","disablePadding","sortDirection","id","order","TableSortLabel","active","direction","property","event","label","itemsCount","page","rowsPerPage","emptyRows","Math","max","sx","height","colSpan","Toolbar","flex","TableContainer","minWidth","color","RoomEditModal","open","onClose","currentRoom","Modal","DialogContent","roomData","onCloseModal","row","scope","getDateDDMMYYYY","arrivalDate","departureDate","getGuestsLabel","adults","babies","totalPrice","disableInteractive","history","removeBooking","removeBookingRoom","Cancel","bookings","margin","bookingRow","setOpen","showEditModal","setShowEditModal","getBookingsByRoomId","borderBottom","onMouseDown","stopPropagation","onDelete","deleteIcon","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","timeout","unmountOnExit","getRooms","roomsIsLoading","getRoomsLoadingStatus","useSort","sortedItems","handleRequestSort","usePagination","roomsCroppedList","itemsListCrop","currentPage","pageSize","handleChangePage","handleChangePageSize","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","labelRowsPerPage","width","Paper","mb","RoomCard","fullWidth","getBookingsByUserId","marginBottom","booking","isRequired","message","email","isEmail","password","isCapitalSymbol","isContainDigit","min","genderItems","currentUserData","initialData","gender","birthYear","Date","now","useForm","validatorConfig","data","errors","handleInputChange","handleKeyDown","validate","handleChange","autoFocus","items","openTo","mask","minDate","renderInput","TextField","error","helperText","preventDefault","updateUserData","Object","keys","elevation","favoritesRoomIds","JSON","parse","localStorageService","getRoomsByIds","reviewsIds","getLikesByUserId","el","getReviewsByIds","display","flexDirection","ReviewsList","useMockData","initialize","progress","useParams","renderComponent","Header","Container","Breadcrumbs","Footer"],"sourceRoot":""}